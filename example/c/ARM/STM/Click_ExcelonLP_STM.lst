;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1.8.2018. 16:41:59
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x17A10000  	6049
0x0008	0x17990000  	6041
0x000C	0x17990000  	6041
0x0010	0x17990000  	6041
0x0014	0x17990000  	6041
0x0018	0x17990000  	6041
0x001C	0x17990000  	6041
0x0020	0x17990000  	6041
0x0024	0x17990000  	6041
0x0028	0x17990000  	6041
0x002C	0x17990000  	6041
0x0030	0x17990000  	6041
0x0034	0x17990000  	6041
0x0038	0x17990000  	6041
0x003C	0x17990000  	6041
0x0040	0x17990000  	6041
0x0044	0x17990000  	6041
0x0048	0x17990000  	6041
0x004C	0x17990000  	6041
0x0050	0x17990000  	6041
0x0054	0x17990000  	6041
0x0058	0x17990000  	6041
0x005C	0x17990000  	6041
0x0060	0x17990000  	6041
0x0064	0x17990000  	6041
0x0068	0x17990000  	6041
0x006C	0x17990000  	6041
0x0070	0x17990000  	6041
0x0074	0x17990000  	6041
0x0078	0x17990000  	6041
0x007C	0x17990000  	6041
0x0080	0x17990000  	6041
0x0084	0x17990000  	6041
0x0088	0x17990000  	6041
0x008C	0x17990000  	6041
0x0090	0x17990000  	6041
0x0094	0x17990000  	6041
0x0098	0x17990000  	6041
0x009C	0x17990000  	6041
0x00A0	0x17990000  	6041
0x00A4	0x17990000  	6041
0x00A8	0x17990000  	6041
0x00AC	0x17990000  	6041
0x00B0	0x17990000  	6041
0x00B4	0x17990000  	6041
0x00B8	0x17990000  	6041
0x00BC	0x17990000  	6041
0x00C0	0x17990000  	6041
0x00C4	0x17990000  	6041
0x00C8	0x17990000  	6041
0x00CC	0x17990000  	6041
0x00D0	0x17990000  	6041
0x00D4	0x17990000  	6041
0x00D8	0x17990000  	6041
0x00DC	0x17990000  	6041
0x00E0	0x17990000  	6041
0x00E4	0x17990000  	6041
0x00E8	0x17990000  	6041
0x00EC	0x17990000  	6041
0x00F0	0x17990000  	6041
0x00F4	0x17990000  	6041
0x00F8	0x17990000  	6041
0x00FC	0x17990000  	6041
0x0100	0x17990000  	6041
0x0104	0x17990000  	6041
0x0108	0x17990000  	6041
0x010C	0x17990000  	6041
0x0110	0x17990000  	6041
0x0114	0x17990000  	6041
0x0118	0x17990000  	6041
0x011C	0x17990000  	6041
0x0120	0x17990000  	6041
0x0124	0x17990000  	6041
0x0128	0x17990000  	6041
0x012C	0x17990000  	6041
0x0130	0x17990000  	6041
0x0134	0x17990000  	6041
0x0138	0x17990000  	6041
0x013C	0x17990000  	6041
0x0140	0x17990000  	6041
0x0144	0x17990000  	6041
0x0148	0x17990000  	6041
0x014C	0x17990000  	6041
; end of ____SysVT
_main:
;Click_ExcelonLP_STM.c, 91 :: 		void main()
0x17A0	0xF000F80E  BL	6080
0x17A4	0xF000FA70  BL	7304
0x17A8	0xF7FFFFEC  BL	6020
0x17AC	0xF000FA1E  BL	7148
;Click_ExcelonLP_STM.c, 93 :: 		systemInit();
0x17B0	0xF7FFFFBA  BL	_systemInit+0
;Click_ExcelonLP_STM.c, 94 :: 		applicationInit();
0x17B4	0xF7FFFFA8  BL	_applicationInit+0
;Click_ExcelonLP_STM.c, 96 :: 		while (1)
L_main13:
;Click_ExcelonLP_STM.c, 98 :: 		applicationTask();
0x17B8	0xF7FFFF02  BL	_applicationTask+0
;Click_ExcelonLP_STM.c, 99 :: 		}
0x17BC	0xE7FC    B	L_main13
;Click_ExcelonLP_STM.c, 100 :: 		}
L_end_main:
L__main_end_loop:
0x17BE	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x15A8	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x15AA	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x15AE	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x15B2	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x15B6	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x15B8	0xB001    ADD	SP, SP, #4
0x15BA	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x1500	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x1502	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x1506	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x150A	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x150E	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x1510	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x1514	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x1516	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x1518	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x151A	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x151E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x1522	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x1524	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x1528	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x152A	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x152C	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x1530	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x1534	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x1536	0xB001    ADD	SP, SP, #4
0x1538	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_ExcelonLP_STM.c, 43 :: 		void systemInit()
0x1728	0xB081    SUB	SP, SP, #4
0x172A	0xF8CDE000  STR	LR, [SP, #0]
;Click_ExcelonLP_STM.c, 45 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT );
0x172E	0x2200    MOVS	R2, #0
0x1730	0x2102    MOVS	R1, #2
0x1732	0x2000    MOVS	R0, #0
0x1734	0xF7FFFE70  BL	_mikrobus_gpioInit+0
;Click_ExcelonLP_STM.c, 46 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_PWM_PIN, _GPIO_OUTPUT );
0x1738	0x2200    MOVS	R2, #0
0x173A	0x2106    MOVS	R1, #6
0x173C	0x2000    MOVS	R0, #0
0x173E	0xF7FFFE6B  BL	_mikrobus_gpioInit+0
;Click_ExcelonLP_STM.c, 47 :: 		mikrobus_spiInit( _MIKROBUS1, &_EXCELONLP_SPI_CFG[0] );
0x1742	0x480E    LDR	R0, [PC, #56]
0x1744	0x4601    MOV	R1, R0
0x1746	0x2000    MOVS	R0, #0
0x1748	0xF7FFFE4E  BL	_mikrobus_spiInit+0
;Click_ExcelonLP_STM.c, 48 :: 		mikrobus_logInit( _LOG_USBUART_A, 115200 );
0x174C	0xF44F31E1  MOV	R1, #115200
0x1750	0x2020    MOVS	R0, #32
0x1752	0xF7FFFE25  BL	_mikrobus_logInit+0
;Click_ExcelonLP_STM.c, 49 :: 		mikrobus_logWrite("--- System init ---", _LOG_LINE);
0x1756	0x480A    LDR	R0, [PC, #40]
0x1758	0x2102    MOVS	R1, #2
0x175A	0xF7FFFE7F  BL	_mikrobus_logWrite+0
;Click_ExcelonLP_STM.c, 50 :: 		Delay_ms( 100 );
0x175E	0xF644777F  MOVW	R7, #20351
0x1762	0xF2C00712  MOVT	R7, #18
0x1766	0xBF00    NOP
0x1768	0xBF00    NOP
L_systemInit0:
0x176A	0x1E7F    SUBS	R7, R7, #1
0x176C	0xD1FD    BNE	L_systemInit0
0x176E	0xBF00    NOP
0x1770	0xBF00    NOP
0x1772	0xBF00    NOP
;Click_ExcelonLP_STM.c, 51 :: 		}
L_end_systemInit:
0x1774	0xF8DDE000  LDR	LR, [SP, #0]
0x1778	0xB001    ADD	SP, SP, #4
0x177A	0x4770    BX	LR
0x177C	0x1BDC0000  	__EXCELONLP_SPI_CFG+0
0x1780	0x00002000  	?lstr1_Click_ExcelonLP_STM+0
; end of _systemInit
_mikrobus_gpioInit:
;easymx_v7_STM32F107VC.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1418	0xB081    SUB	SP, SP, #4
0x141A	0xF8CDE000  STR	LR, [SP, #0]
0x141E	0xFA5FF981  UXTB	R9, R1
0x1422	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;easymx_v7_STM32F107VC.c, 164 :: 		switch( bus )
0x1426	0xE00F    B	L_mikrobus_gpioInit78
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit80:
0x1428	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x142C	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1430	0xF7FFFCB0  BL	easymx_v7_STM32F107VC__gpioInit_1+0
0x1434	0xE00D    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit81:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x1436	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x143A	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x143E	0xF7FFFD85  BL	easymx_v7_STM32F107VC__gpioInit_2+0
0x1442	0xE006    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit82:
0x1444	0x2001    MOVS	R0, #1
0x1446	0xE004    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 185 :: 		}
L_mikrobus_gpioInit78:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x1448	0x2800    CMP	R0, #0
0x144A	0xD0ED    BEQ	L_mikrobus_gpioInit80
0x144C	0x2801    CMP	R0, #1
0x144E	0xD0F2    BEQ	L_mikrobus_gpioInit81
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x1450	0xE7F8    B	L_mikrobus_gpioInit82
;easymx_v7_STM32F107VC.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x1452	0xF8DDE000  LDR	LR, [SP, #0]
0x1456	0xB001    ADD	SP, SP, #4
0x1458	0x4770    BX	LR
; end of _mikrobus_gpioInit
easymx_v7_STM32F107VC__gpioInit_1:
;__em_f107vc_gpio.c, 81 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x0D94	0xB081    SUB	SP, SP, #4
0x0D96	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 83 :: 		switch( pin )
0x0D9A	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_10
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 85 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_4 ); break;
L_easymx_v7_STM32F107VC__gpioInit_12:
0x0D9C	0x2901    CMP	R1, #1
0x0D9E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_13
; dir end address is: 4 (R1)
0x0DA0	0xF2400110  MOVW	R1, #16
0x0DA4	0x4865    LDR	R0, [PC, #404]
0x0DA6	0xF7FFFE85  BL	_GPIO_Digital_Input+0
0x0DAA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_14
L_easymx_v7_STM32F107VC__gpioInit_13:
0x0DAC	0xF2400110  MOVW	R1, #16
0x0DB0	0x4862    LDR	R0, [PC, #392]
0x0DB2	0xF7FFFE8B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_14:
0x0DB6	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 86 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_2 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_2 ); break;
L_easymx_v7_STM32F107VC__gpioInit_15:
; dir start address is: 4 (R1)
0x0DB8	0x2901    CMP	R1, #1
0x0DBA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_16
; dir end address is: 4 (R1)
0x0DBC	0xF2400104  MOVW	R1, #4
0x0DC0	0x485F    LDR	R0, [PC, #380]
0x0DC2	0xF7FFFE77  BL	_GPIO_Digital_Input+0
0x0DC6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_17
L_easymx_v7_STM32F107VC__gpioInit_16:
0x0DC8	0xF2400104  MOVW	R1, #4
0x0DCC	0x485C    LDR	R0, [PC, #368]
0x0DCE	0xF7FFFE7D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_17:
0x0DD2	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 87 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_13); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13); break;
L_easymx_v7_STM32F107VC__gpioInit_18:
; dir start address is: 4 (R1)
0x0DD4	0x2901    CMP	R1, #1
0x0DD6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_19
; dir end address is: 4 (R1)
0x0DD8	0xF2420100  MOVW	R1, #8192
0x0DDC	0x4859    LDR	R0, [PC, #356]
0x0DDE	0xF7FFFE69  BL	_GPIO_Digital_Input+0
0x0DE2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_110
L_easymx_v7_STM32F107VC__gpioInit_19:
0x0DE4	0xF2420100  MOVW	R1, #8192
0x0DE8	0x4856    LDR	R0, [PC, #344]
0x0DEA	0xF7FFFE6F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_110:
0x0DEE	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 88 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_111:
; dir start address is: 4 (R1)
0x0DF0	0x2901    CMP	R1, #1
0x0DF2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_112
; dir end address is: 4 (R1)
0x0DF4	0xF2404100  MOVW	R1, #1024
0x0DF8	0x4851    LDR	R0, [PC, #324]
0x0DFA	0xF7FFFE5B  BL	_GPIO_Digital_Input+0
0x0DFE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_113
L_easymx_v7_STM32F107VC__gpioInit_112:
0x0E00	0xF2404100  MOVW	R1, #1024
0x0E04	0x484E    LDR	R0, [PC, #312]
0x0E06	0xF7FFFE61  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_113:
0x0E0A	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 89 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_114:
; dir start address is: 4 (R1)
0x0E0C	0x2901    CMP	R1, #1
0x0E0E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_115
; dir end address is: 4 (R1)
0x0E10	0xF6400100  MOVW	R1, #2048
0x0E14	0x484A    LDR	R0, [PC, #296]
0x0E16	0xF7FFFE4D  BL	_GPIO_Digital_Input+0
0x0E1A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_116
L_easymx_v7_STM32F107VC__gpioInit_115:
0x0E1C	0xF6400100  MOVW	R1, #2048
0x0E20	0x4847    LDR	R0, [PC, #284]
0x0E22	0xF7FFFE53  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_116:
0x0E26	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 90 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_117:
; dir start address is: 4 (R1)
0x0E28	0x2901    CMP	R1, #1
0x0E2A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_118
; dir end address is: 4 (R1)
0x0E2C	0xF2410100  MOVW	R1, #4096
0x0E30	0x4843    LDR	R0, [PC, #268]
0x0E32	0xF7FFFE3F  BL	_GPIO_Digital_Input+0
0x0E36	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_119
L_easymx_v7_STM32F107VC__gpioInit_118:
0x0E38	0xF2410100  MOVW	R1, #4096
0x0E3C	0x4840    LDR	R0, [PC, #256]
0x0E3E	0xF7FFFE45  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_119:
0x0E42	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 91 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_0 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0 ); break;
L_easymx_v7_STM32F107VC__gpioInit_120:
; dir start address is: 4 (R1)
0x0E44	0x2901    CMP	R1, #1
0x0E46	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_121
; dir end address is: 4 (R1)
0x0E48	0xF2400101  MOVW	R1, #1
0x0E4C	0x483B    LDR	R0, [PC, #236]
0x0E4E	0xF7FFFE31  BL	_GPIO_Digital_Input+0
0x0E52	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_122
L_easymx_v7_STM32F107VC__gpioInit_121:
0x0E54	0xF2400101  MOVW	R1, #1
0x0E58	0x4838    LDR	R0, [PC, #224]
0x0E5A	0xF7FFFE37  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_122:
0x0E5E	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 92 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_123:
; dir start address is: 4 (R1)
0x0E60	0x2901    CMP	R1, #1
0x0E62	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_124
; dir end address is: 4 (R1)
0x0E64	0xF2404100  MOVW	R1, #1024
0x0E68	0x4836    LDR	R0, [PC, #216]
0x0E6A	0xF7FFFE23  BL	_GPIO_Digital_Input+0
0x0E6E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_125
L_easymx_v7_STM32F107VC__gpioInit_124:
0x0E70	0xF2404100  MOVW	R1, #1024
0x0E74	0x4833    LDR	R0, [PC, #204]
0x0E76	0xF7FFFE29  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_125:
0x0E7A	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 93 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_9 ); break;
L_easymx_v7_STM32F107VC__gpioInit_126:
; dir start address is: 4 (R1)
0x0E7C	0x2901    CMP	R1, #1
0x0E7E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_127
; dir end address is: 4 (R1)
0x0E80	0xF2402100  MOVW	R1, #512
0x0E84	0x482F    LDR	R0, [PC, #188]
0x0E86	0xF7FFFE15  BL	_GPIO_Digital_Input+0
0x0E8A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_128
L_easymx_v7_STM32F107VC__gpioInit_127:
0x0E8C	0xF2402100  MOVW	R1, #512
0x0E90	0x482C    LDR	R0, [PC, #176]
0x0E92	0xF7FFFE1B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_128:
0x0E96	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 94 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_8 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 ); break;
L_easymx_v7_STM32F107VC__gpioInit_129:
; dir start address is: 4 (R1)
0x0E98	0x2901    CMP	R1, #1
0x0E9A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_130
; dir end address is: 4 (R1)
0x0E9C	0xF2401100  MOVW	R1, #256
0x0EA0	0x4828    LDR	R0, [PC, #160]
0x0EA2	0xF7FFFE07  BL	_GPIO_Digital_Input+0
0x0EA6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_131
L_easymx_v7_STM32F107VC__gpioInit_130:
0x0EA8	0xF2401100  MOVW	R1, #256
0x0EAC	0x4825    LDR	R0, [PC, #148]
0x0EAE	0xF7FFFE0D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_131:
0x0EB2	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 95 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_132:
; dir start address is: 4 (R1)
0x0EB4	0x2901    CMP	R1, #1
0x0EB6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_133
; dir end address is: 4 (R1)
0x0EB8	0xF2400140  MOVW	R1, #64
0x0EBC	0x4822    LDR	R0, [PC, #136]
0x0EBE	0xF7FFFDF9  BL	_GPIO_Digital_Input+0
0x0EC2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_134
L_easymx_v7_STM32F107VC__gpioInit_133:
0x0EC4	0xF2400140  MOVW	R1, #64
0x0EC8	0x481F    LDR	R0, [PC, #124]
0x0ECA	0xF7FFFDFF  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_134:
0x0ECE	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 96 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_135:
; dir start address is: 4 (R1)
0x0ED0	0x2901    CMP	R1, #1
0x0ED2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_136
; dir end address is: 4 (R1)
0x0ED4	0xF2400180  MOVW	R1, #128
0x0ED8	0x481B    LDR	R0, [PC, #108]
0x0EDA	0xF7FFFDEB  BL	_GPIO_Digital_Input+0
0x0EDE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_137
L_easymx_v7_STM32F107VC__gpioInit_136:
0x0EE0	0xF2400180  MOVW	R1, #128
0x0EE4	0x4818    LDR	R0, [PC, #96]
0x0EE6	0xF7FFFDF1  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_137:
0x0EEA	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 97 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_138:
0x0EEC	0x2001    MOVS	R0, #1
0x0EEE	0xE020    B	L_end__gpioInit_1
;__em_f107vc_gpio.c, 98 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x0EF0	0x2800    CMP	R0, #0
0x0EF2	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_12
0x0EF6	0x2801    CMP	R0, #1
0x0EF8	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_15
0x0EFC	0x2802    CMP	R0, #2
0x0EFE	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_18
0x0F02	0x2803    CMP	R0, #3
0x0F04	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_111
0x0F08	0x2804    CMP	R0, #4
0x0F0A	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_114
0x0F0E	0x2805    CMP	R0, #5
0x0F10	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_117
0x0F14	0x2806    CMP	R0, #6
0x0F16	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_120
0x0F1A	0x2807    CMP	R0, #7
0x0F1C	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_123
0x0F1E	0x2808    CMP	R0, #8
0x0F20	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_126
0x0F22	0x2809    CMP	R0, #9
0x0F24	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_129
0x0F26	0x280A    CMP	R0, #10
0x0F28	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_132
0x0F2A	0x280B    CMP	R0, #11
0x0F2C	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x0F2E	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_138
L_easymx_v7_STM32F107VC__gpioInit_11:
;__em_f107vc_gpio.c, 99 :: 		return _MIKROBUS_OK;
0x0F30	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 100 :: 		}
L_end__gpioInit_1:
0x0F32	0xF8DDE000  LDR	LR, [SP, #0]
0x0F36	0xB001    ADD	SP, SP, #4
0x0F38	0x4770    BX	LR
0x0F3A	0xBF00    NOP
0x0F3C	0x08004001  	GPIOA_BASE+0
0x0F40	0x10004001  	GPIOC_BASE+0
0x0F44	0x14004001  	GPIOD_BASE+0
0x0F48	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0AB4	0xB081    SUB	SP, SP, #4
0x0AB6	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x0ABA	0xF04F0242  MOV	R2, #66
0x0ABE	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0AC0	0xF7FFFE20  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x0AC4	0xF8DDE000  LDR	LR, [SP, #0]
0x0AC8	0xB001    ADD	SP, SP, #4
0x0ACA	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0704	0xB081    SUB	SP, SP, #4
0x0706	0xF8CDE000  STR	LR, [SP, #0]
0x070A	0xB28C    UXTH	R4, R1
0x070C	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x070E	0x4B77    LDR	R3, [PC, #476]
0x0710	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x0714	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x0716	0x4618    MOV	R0, R3
0x0718	0xF7FFFD6C  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x071C	0xF1B40FFF  CMP	R4, #255
0x0720	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x0722	0x4B73    LDR	R3, [PC, #460]
0x0724	0x429D    CMP	R5, R3
0x0726	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0728	0xF04F3333  MOV	R3, #858993459
0x072C	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x072E	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0730	0x2D42    CMP	R5, #66
0x0732	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x0734	0xF04F3344  MOV	R3, #1145324612
0x0738	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x073A	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x073C	0xF64F73FF  MOVW	R3, #65535
0x0740	0x429C    CMP	R4, R3
0x0742	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x0744	0x4B6A    LDR	R3, [PC, #424]
0x0746	0x429D    CMP	R5, R3
0x0748	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x074A	0xF04F3333  MOV	R3, #858993459
0x074E	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0750	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0752	0xF04F3333  MOV	R3, #858993459
0x0756	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0758	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x075A	0x2D42    CMP	R5, #66
0x075C	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x075E	0xF04F3344  MOV	R3, #1145324612
0x0762	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x0764	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0766	0xF04F3344  MOV	R3, #1145324612
0x076A	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x076C	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x076E	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0770	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x0772	0xF0050301  AND	R3, R5, #1
0x0776	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0778	0x2100    MOVS	R1, #0
0x077A	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x077C	0xF0050302  AND	R3, R5, #2
0x0780	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x0782	0xF40573C0  AND	R3, R5, #384
0x0786	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0788	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x078A	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x078C	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x078E	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0790	0xF0050304  AND	R3, R5, #4
0x0794	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x0796	0xF0050320  AND	R3, R5, #32
0x079A	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x079C	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x079E	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x07A0	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x07A2	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x07A4	0xF0050308  AND	R3, R5, #8
0x07A8	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x07AA	0xF0050320  AND	R3, R5, #32
0x07AE	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x07B0	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x07B2	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x07B4	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x07B6	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x07B8	0x4B4E    LDR	R3, [PC, #312]
0x07BA	0xEA050303  AND	R3, R5, R3, LSL #0
0x07BE	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x07C0	0x2003    MOVS	R0, #3
0x07C2	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x07C4	0xF4057300  AND	R3, R5, #512
0x07C8	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x07CA	0x2002    MOVS	R0, #2
0x07CC	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x07CE	0xF4056380  AND	R3, R5, #1024
0x07D2	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x07D4	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x07D6	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x07D8	0xF005030C  AND	R3, R5, #12
0x07DC	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x07DE	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x07E0	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x07E2	0xF00403FF  AND	R3, R4, #255
0x07E6	0xB29B    UXTH	R3, R3
0x07E8	0x2B00    CMP	R3, #0
0x07EA	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x07EC	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x07EE	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x07F0	0xFA1FF884  UXTH	R8, R4
0x07F4	0x4632    MOV	R2, R6
0x07F6	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x07F8	0x2808    CMP	R0, #8
0x07FA	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x07FC	0xF04F0301  MOV	R3, #1
0x0800	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x0804	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x0808	0x42A3    CMP	R3, R4
0x080A	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x080C	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x080E	0xF04F030F  MOV	R3, #15
0x0812	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x0814	0x43DB    MVN	R3, R3
0x0816	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x081A	0xFA01F305  LSL	R3, R1, R5
0x081E	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0822	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x0824	0xF4067381  AND	R3, R6, #258
0x0828	0xF5B37F81  CMP	R3, #258
0x082C	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x082E	0xF2020414  ADDW	R4, R2, #20
0x0832	0xF04F0301  MOV	R3, #1
0x0836	0x4083    LSLS	R3, R0
0x0838	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x083A	0xF0060382  AND	R3, R6, #130
0x083E	0x2B82    CMP	R3, #130
0x0840	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x0842	0xF2020410  ADDW	R4, R2, #16
0x0846	0xF04F0301  MOV	R3, #1
0x084A	0x4083    LSLS	R3, R0
0x084C	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x084E	0x462F    MOV	R7, R5
0x0850	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x0852	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x0854	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x0856	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0858	0xFA1FF088  UXTH	R0, R8
0x085C	0x460F    MOV	R7, R1
0x085E	0x4631    MOV	R1, R6
0x0860	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x0862	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x0864	0x460F    MOV	R7, R1
0x0866	0x4629    MOV	R1, R5
0x0868	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x086A	0xF1B00FFF  CMP	R0, #255
0x086E	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0870	0x1D33    ADDS	R3, R6, #4
0x0872	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x0876	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0878	0x2A08    CMP	R2, #8
0x087A	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x087C	0xF2020408  ADDW	R4, R2, #8
0x0880	0xF04F0301  MOV	R3, #1
0x0884	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0888	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x088C	0x42A3    CMP	R3, R4
0x088E	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0890	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x0892	0xF04F030F  MOV	R3, #15
0x0896	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x0898	0x43DB    MVN	R3, R3
0x089A	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x089E	0xFA07F305  LSL	R3, R7, R5
0x08A2	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x08A6	0xF4017381  AND	R3, R1, #258
0x08AA	0xF5B37F81  CMP	R3, #258
0x08AE	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x08B0	0xF2060514  ADDW	R5, R6, #20
0x08B4	0xF2020408  ADDW	R4, R2, #8
0x08B8	0xF04F0301  MOV	R3, #1
0x08BC	0x40A3    LSLS	R3, R4
0x08BE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x08C0	0xF0010382  AND	R3, R1, #130
0x08C4	0x2B82    CMP	R3, #130
0x08C6	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x08C8	0xF2060510  ADDW	R5, R6, #16
0x08CC	0xF2020408  ADDW	R4, R2, #8
0x08D0	0xF04F0301  MOV	R3, #1
0x08D4	0x40A3    LSLS	R3, R4
0x08D6	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x08D8	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x08DA	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x08DC	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x08DE	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x08E0	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x08E4	0xF8DDE000  LDR	LR, [SP, #0]
0x08E8	0xB001    ADD	SP, SP, #4
0x08EA	0x4770    BX	LR
0x08EC	0xFC00FFFF  	#-1024
0x08F0	0x00140008  	#524308
0x08F4	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x01F4	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x01F6	0x4919    LDR	R1, [PC, #100]
0x01F8	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x01FC	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x01FE	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x0200	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0202	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0204	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0206	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0208	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x020A	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x020C	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x020E	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0210	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0212	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0214	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0216	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0218	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x021A	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x021E	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0220	0x490F    LDR	R1, [PC, #60]
0x0222	0x4288    CMP	R0, R1
0x0224	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0226	0x490F    LDR	R1, [PC, #60]
0x0228	0x4288    CMP	R0, R1
0x022A	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x022C	0x490E    LDR	R1, [PC, #56]
0x022E	0x4288    CMP	R0, R1
0x0230	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x0232	0x490E    LDR	R1, [PC, #56]
0x0234	0x4288    CMP	R0, R1
0x0236	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0238	0x490D    LDR	R1, [PC, #52]
0x023A	0x4288    CMP	R0, R1
0x023C	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x023E	0x490D    LDR	R1, [PC, #52]
0x0240	0x4288    CMP	R0, R1
0x0242	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0244	0x490C    LDR	R1, [PC, #48]
0x0246	0x4288    CMP	R0, R1
0x0248	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x024A	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x024C	0x490B    LDR	R1, [PC, #44]
0x024E	0x6809    LDR	R1, [R1, #0]
0x0250	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0254	0x4909    LDR	R1, [PC, #36]
0x0256	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x0258	0xB001    ADD	SP, SP, #4
0x025A	0x4770    BX	LR
0x025C	0xFC00FFFF  	#-1024
0x0260	0x08004001  	#1073809408
0x0264	0x0C004001  	#1073810432
0x0268	0x10004001  	#1073811456
0x026C	0x14004001  	#1073812480
0x0270	0x18004001  	#1073813504
0x0274	0x1C004001  	#1073814528
0x0278	0x20004001  	#1073815552
0x027C	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0ACC	0xB081    SUB	SP, SP, #4
0x0ACE	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x0AD2	0x4A04    LDR	R2, [PC, #16]
0x0AD4	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0AD6	0xF7FFFE15  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x0ADA	0xF8DDE000  LDR	LR, [SP, #0]
0x0ADE	0xB001    ADD	SP, SP, #4
0x0AE0	0x4770    BX	LR
0x0AE2	0xBF00    NOP
0x0AE4	0x00140008  	#524308
; end of _GPIO_Digital_Output
easymx_v7_STM32F107VC__gpioInit_2:
;__em_f107vc_gpio.c, 102 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x0F4C	0xB081    SUB	SP, SP, #4
0x0F4E	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 104 :: 		switch( pin )
0x0F52	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_239
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 106 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_241:
0x0F54	0x2901    CMP	R1, #1
0x0F56	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_242
; dir end address is: 4 (R1)
0x0F58	0xF2400120  MOVW	R1, #32
0x0F5C	0x4865    LDR	R0, [PC, #404]
0x0F5E	0xF7FFFDA9  BL	_GPIO_Digital_Input+0
0x0F62	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_243
L_easymx_v7_STM32F107VC__gpioInit_242:
0x0F64	0xF2400120  MOVW	R1, #32
0x0F68	0x4862    LDR	R0, [PC, #392]
0x0F6A	0xF7FFFDAF  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_243:
0x0F6E	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 107 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_3 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_3 ); break;
L_easymx_v7_STM32F107VC__gpioInit_244:
; dir start address is: 4 (R1)
0x0F70	0x2901    CMP	R1, #1
0x0F72	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_245
; dir end address is: 4 (R1)
0x0F74	0xF2400108  MOVW	R1, #8
0x0F78	0x485F    LDR	R0, [PC, #380]
0x0F7A	0xF7FFFD9B  BL	_GPIO_Digital_Input+0
0x0F7E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_246
L_easymx_v7_STM32F107VC__gpioInit_245:
0x0F80	0xF2400108  MOVW	R1, #8
0x0F84	0x485C    LDR	R0, [PC, #368]
0x0F86	0xF7FFFDA1  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_246:
0x0F8A	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 108 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_14); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_14); break;
L_easymx_v7_STM32F107VC__gpioInit_247:
; dir start address is: 4 (R1)
0x0F8C	0x2901    CMP	R1, #1
0x0F8E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_248
; dir end address is: 4 (R1)
0x0F90	0xF2440100  MOVW	R1, #16384
0x0F94	0x4859    LDR	R0, [PC, #356]
0x0F96	0xF7FFFD8D  BL	_GPIO_Digital_Input+0
0x0F9A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_249
L_easymx_v7_STM32F107VC__gpioInit_248:
0x0F9C	0xF2440100  MOVW	R1, #16384
0x0FA0	0x4856    LDR	R0, [PC, #344]
0x0FA2	0xF7FFFD93  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_249:
0x0FA6	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 109 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_250:
; dir start address is: 4 (R1)
0x0FA8	0x2901    CMP	R1, #1
0x0FAA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_251
; dir end address is: 4 (R1)
0x0FAC	0xF2404100  MOVW	R1, #1024
0x0FB0	0x4851    LDR	R0, [PC, #324]
0x0FB2	0xF7FFFD7F  BL	_GPIO_Digital_Input+0
0x0FB6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_252
L_easymx_v7_STM32F107VC__gpioInit_251:
0x0FB8	0xF2404100  MOVW	R1, #1024
0x0FBC	0x484E    LDR	R0, [PC, #312]
0x0FBE	0xF7FFFD85  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_252:
0x0FC2	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 110 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_253:
; dir start address is: 4 (R1)
0x0FC4	0x2901    CMP	R1, #1
0x0FC6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_254
; dir end address is: 4 (R1)
0x0FC8	0xF6400100  MOVW	R1, #2048
0x0FCC	0x484A    LDR	R0, [PC, #296]
0x0FCE	0xF7FFFD71  BL	_GPIO_Digital_Input+0
0x0FD2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_255
L_easymx_v7_STM32F107VC__gpioInit_254:
0x0FD4	0xF6400100  MOVW	R1, #2048
0x0FD8	0x4847    LDR	R0, [PC, #284]
0x0FDA	0xF7FFFD77  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_255:
0x0FDE	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 111 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_256:
; dir start address is: 4 (R1)
0x0FE0	0x2901    CMP	R1, #1
0x0FE2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_257
; dir end address is: 4 (R1)
0x0FE4	0xF2410100  MOVW	R1, #4096
0x0FE8	0x4843    LDR	R0, [PC, #268]
0x0FEA	0xF7FFFD63  BL	_GPIO_Digital_Input+0
0x0FEE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_258
L_easymx_v7_STM32F107VC__gpioInit_257:
0x0FF0	0xF2410100  MOVW	R1, #4096
0x0FF4	0x4840    LDR	R0, [PC, #256]
0x0FF6	0xF7FFFD69  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_258:
0x0FFA	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 112 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_259:
; dir start address is: 4 (R1)
0x0FFC	0x2901    CMP	R1, #1
0x0FFE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_260
; dir end address is: 4 (R1)
0x1000	0xF2410100  MOVW	R1, #4096
0x1004	0x483D    LDR	R0, [PC, #244]
0x1006	0xF7FFFD55  BL	_GPIO_Digital_Input+0
0x100A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_261
L_easymx_v7_STM32F107VC__gpioInit_260:
0x100C	0xF2410100  MOVW	R1, #4096
0x1010	0x483A    LDR	R0, [PC, #232]
0x1012	0xF7FFFD5B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_261:
0x1016	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 113 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_262:
; dir start address is: 4 (R1)
0x1018	0x2901    CMP	R1, #1
0x101A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_263
; dir end address is: 4 (R1)
0x101C	0xF6400100  MOVW	R1, #2048
0x1020	0x4836    LDR	R0, [PC, #216]
0x1022	0xF7FFFD47  BL	_GPIO_Digital_Input+0
0x1026	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_264
L_easymx_v7_STM32F107VC__gpioInit_263:
0x1028	0xF6400100  MOVW	R1, #2048
0x102C	0x4833    LDR	R0, [PC, #204]
0x102E	0xF7FFFD4D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_264:
0x1032	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 114 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_265:
; dir start address is: 4 (R1)
0x1034	0x2901    CMP	R1, #1
0x1036	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_266
; dir end address is: 4 (R1)
0x1038	0xF2400140  MOVW	R1, #64
0x103C	0x482F    LDR	R0, [PC, #188]
0x103E	0xF7FFFD39  BL	_GPIO_Digital_Input+0
0x1042	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_267
L_easymx_v7_STM32F107VC__gpioInit_266:
0x1044	0xF2400140  MOVW	R1, #64
0x1048	0x482C    LDR	R0, [PC, #176]
0x104A	0xF7FFFD3F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_267:
0x104E	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 115 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_268:
; dir start address is: 4 (R1)
0x1050	0x2901    CMP	R1, #1
0x1052	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_269
; dir end address is: 4 (R1)
0x1054	0xF2400120  MOVW	R1, #32
0x1058	0x4828    LDR	R0, [PC, #160]
0x105A	0xF7FFFD2B  BL	_GPIO_Digital_Input+0
0x105E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_270
L_easymx_v7_STM32F107VC__gpioInit_269:
0x1060	0xF2400120  MOVW	R1, #32
0x1064	0x4825    LDR	R0, [PC, #148]
0x1066	0xF7FFFD31  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_270:
0x106A	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 116 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_271:
; dir start address is: 4 (R1)
0x106C	0x2901    CMP	R1, #1
0x106E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_272
; dir end address is: 4 (R1)
0x1070	0xF2400140  MOVW	R1, #64
0x1074	0x4822    LDR	R0, [PC, #136]
0x1076	0xF7FFFD1D  BL	_GPIO_Digital_Input+0
0x107A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_273
L_easymx_v7_STM32F107VC__gpioInit_272:
0x107C	0xF2400140  MOVW	R1, #64
0x1080	0x481F    LDR	R0, [PC, #124]
0x1082	0xF7FFFD23  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_273:
0x1086	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 117 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_274:
; dir start address is: 4 (R1)
0x1088	0x2901    CMP	R1, #1
0x108A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_275
; dir end address is: 4 (R1)
0x108C	0xF2400180  MOVW	R1, #128
0x1090	0x481B    LDR	R0, [PC, #108]
0x1092	0xF7FFFD0F  BL	_GPIO_Digital_Input+0
0x1096	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_276
L_easymx_v7_STM32F107VC__gpioInit_275:
0x1098	0xF2400180  MOVW	R1, #128
0x109C	0x4818    LDR	R0, [PC, #96]
0x109E	0xF7FFFD15  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_276:
0x10A2	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 118 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_277:
0x10A4	0x2001    MOVS	R0, #1
0x10A6	0xE020    B	L_end__gpioInit_2
;__em_f107vc_gpio.c, 119 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x10A8	0x2800    CMP	R0, #0
0x10AA	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_241
0x10AE	0x2801    CMP	R0, #1
0x10B0	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_244
0x10B4	0x2802    CMP	R0, #2
0x10B6	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_247
0x10BA	0x2803    CMP	R0, #3
0x10BC	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_250
0x10C0	0x2804    CMP	R0, #4
0x10C2	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_253
0x10C6	0x2805    CMP	R0, #5
0x10C8	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_256
0x10CC	0x2806    CMP	R0, #6
0x10CE	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_259
0x10D2	0x2807    CMP	R0, #7
0x10D4	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_262
0x10D6	0x2808    CMP	R0, #8
0x10D8	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_265
0x10DA	0x2809    CMP	R0, #9
0x10DC	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_268
0x10DE	0x280A    CMP	R0, #10
0x10E0	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_271
0x10E2	0x280B    CMP	R0, #11
0x10E4	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x10E6	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_277
L_easymx_v7_STM32F107VC__gpioInit_240:
;__em_f107vc_gpio.c, 120 :: 		return _MIKROBUS_OK;
0x10E8	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 121 :: 		}
L_end__gpioInit_2:
0x10EA	0xF8DDE000  LDR	LR, [SP, #0]
0x10EE	0xB001    ADD	SP, SP, #4
0x10F0	0x4770    BX	LR
0x10F2	0xBF00    NOP
0x10F4	0x08004001  	GPIOA_BASE+0
0x10F8	0x10004001  	GPIOC_BASE+0
0x10FC	0x14004001  	GPIOD_BASE+0
0x1100	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_2
_mikrobus_spiInit:
;easymx_v7_STM32F107VC.c, 192 :: 		T_mikrobus_ret mikrobus_spiInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x13E8	0xB081    SUB	SP, SP, #4
0x13EA	0xF8CDE000  STR	LR, [SP, #0]
0x13EE	0x468B    MOV	R11, R1
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 44 (R11)
;easymx_v7_STM32F107VC.c, 194 :: 		switch( bus )
0x13F0	0xE009    B	L_mikrobus_spiInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 197 :: 		case _MIKROBUS1 : return _spiInit_1( cfg );
L_mikrobus_spiInit85:
0x13F2	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x13F4	0xF7FFFCBC  BL	easymx_v7_STM32F107VC__spiInit_1+0
0x13F8	0xE00A    B	L_end_mikrobus_spiInit
;easymx_v7_STM32F107VC.c, 200 :: 		case _MIKROBUS2 : return _spiInit_2( cfg );
L_mikrobus_spiInit86:
; cfg start address is: 44 (R11)
0x13FA	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x13FC	0xF7FFFC96  BL	easymx_v7_STM32F107VC__spiInit_2+0
0x1400	0xE006    B	L_end_mikrobus_spiInit
;easymx_v7_STM32F107VC.c, 214 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_spiInit87:
0x1402	0x2001    MOVS	R0, #1
0x1404	0xE004    B	L_end_mikrobus_spiInit
;easymx_v7_STM32F107VC.c, 215 :: 		}
L_mikrobus_spiInit83:
; cfg start address is: 44 (R11)
; bus start address is: 0 (R0)
0x1406	0x2800    CMP	R0, #0
0x1408	0xD0F3    BEQ	L_mikrobus_spiInit85
0x140A	0x2801    CMP	R0, #1
0x140C	0xD0F5    BEQ	L_mikrobus_spiInit86
; bus end address is: 0 (R0)
; cfg end address is: 44 (R11)
0x140E	0xE7F8    B	L_mikrobus_spiInit87
;easymx_v7_STM32F107VC.c, 217 :: 		}
L_end_mikrobus_spiInit:
0x1410	0xF8DDE000  LDR	LR, [SP, #0]
0x1414	0xB001    ADD	SP, SP, #4
0x1416	0x4770    BX	LR
; end of _mikrobus_spiInit
easymx_v7_STM32F107VC__spiInit_1:
;__em_f107vc_spi.c, 27 :: 		static T_mikrobus_ret _spiInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x0D70	0xB081    SUB	SP, SP, #4
0x0D72	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_spi.c, 29 :: 		SPI3_Init_Advanced( (unsigned char)cfg[0], (long)cfg[1], &_GPIO_MODULE_SPI3_PC10_11_12 );
0x0D76	0x1D01    ADDS	R1, R0, #4
0x0D78	0x680A    LDR	R2, [R1, #0]
0x0D7A	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x0D7C	0xB2C8    UXTB	R0, R1
0x0D7E	0x4611    MOV	R1, R2
0x0D80	0x4A03    LDR	R2, [PC, #12]
0x0D82	0xF7FFFE6D  BL	_SPI3_Init_Advanced+0
;__em_f107vc_spi.c, 30 :: 		return _MIKROBUS_OK;
0x0D86	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_spi.c, 31 :: 		}
L_end__spiInit_1:
0x0D88	0xF8DDE000  LDR	LR, [SP, #0]
0x0D8C	0xB001    ADD	SP, SP, #4
0x0D8E	0x4770    BX	LR
0x0D90	0x19F80000  	__GPIO_MODULE_SPI3_PC10_11_12+0
; end of easymx_v7_STM32F107VC__spiInit_1
_SPI3_Init_Advanced:
;__Lib_SPI_123.c, 133 :: 		
; module start address is: 8 (R2)
0x0A60	0xB083    SUB	SP, SP, #12
0x0A62	0xF8CDE000  STR	LR, [SP, #0]
0x0A66	0xF88D0004  STRB	R0, [SP, #4]
0x0A6A	0x9102    STR	R1, [SP, #8]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SPI_123.c, 134 :: 		
0x0A6C	0x4C0B    LDR	R4, [PC, #44]
0x0A6E	0x4B0C    LDR	R3, [PC, #48]
0x0A70	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 135 :: 		
0x0A72	0x4C0C    LDR	R4, [PC, #48]
0x0A74	0x4B0C    LDR	R3, [PC, #48]
0x0A76	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 137 :: 		
0x0A78	0x2401    MOVS	R4, #1
0x0A7A	0xB264    SXTB	R4, R4
0x0A7C	0x4B0B    LDR	R3, [PC, #44]
0x0A7E	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 138 :: 		
0x0A80	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0x0A82	0xF7FFFC63  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SPI_123.c, 140 :: 		
0x0A86	0x9A02    LDR	R2, [SP, #8]
0x0A88	0xF89D1004  LDRB	R1, [SP, #4]
0x0A8C	0x4808    LDR	R0, [PC, #32]
0x0A8E	0xF7FFFE07  BL	__Lib_SPI_123_SPIx_Init_Advanced+0
;__Lib_SPI_123.c, 141 :: 		
L_end_SPI3_Init_Advanced:
0x0A92	0xF8DDE000  LDR	LR, [SP, #0]
0x0A96	0xB003    ADD	SP, SP, #12
0x0A98	0x4770    BX	LR
0x0A9A	0xBF00    NOP
0x0A9C	0x0A450000  	_SPI3_Read+0
0x0AA0	0x00C02000  	_SPI_Rd_Ptr+0
0x0AA4	0x09AD0000  	_SPI3_Write+0
0x0AA8	0x00C42000  	_SPI_Wr_Ptr+0
0x0AAC	0x03BC4242  	RCC_APB1ENR+0
0x0AB0	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Init_Advanced
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x034C	0xB081    SUB	SP, SP, #4
0x034E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x0352	0x2201    MOVS	R2, #1
0x0354	0xB252    SXTB	R2, R2
0x0356	0x493E    LDR	R1, [PC, #248]
0x0358	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x035A	0xF2000168  ADDW	R1, R0, #104
0x035E	0x680B    LDR	R3, [R1, #0]
0x0360	0xF06F6100  MVN	R1, #134217728
0x0364	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x0368	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x036A	0xF0036100  AND	R1, R3, #134217728
0x036E	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x0370	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x0372	0xF0024100  AND	R1, R2, #-2147483648
0x0376	0xF1B14F00  CMP	R1, #-2147483648
0x037A	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x037C	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x037E	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x0380	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x0382	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0384	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x0386	0xF4042170  AND	R1, R4, #983040
0x038A	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x038C	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x038E	0xF64F71FF  MOVW	R1, #65535
0x0392	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x0396	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x0398	0xF4041140  AND	R1, R4, #3145728
0x039C	0xF5B11F40  CMP	R1, #3145728
0x03A0	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x03A2	0xF06F6170  MVN	R1, #251658240
0x03A6	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x03AA	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x03AC	0x492A    LDR	R1, [PC, #168]
0x03AE	0x680A    LDR	R2, [R1, #0]
0x03B0	0xF06F6170  MVN	R1, #251658240
0x03B4	0x400A    ANDS	R2, R1
0x03B6	0x4928    LDR	R1, [PC, #160]
0x03B8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x03BA	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x03BC	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x03BE	0xF4041180  AND	R1, R4, #1048576
0x03C2	0xF5B11F80  CMP	R1, #1048576
0x03C6	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x03C8	0xF04F0103  MOV	R1, #3
0x03CC	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x03CE	0x43C9    MVN	R1, R1
0x03D0	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x03D4	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x03D8	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x03DA	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x03DC	0x0D61    LSRS	R1, R4, #21
0x03DE	0x0109    LSLS	R1, R1, #4
0x03E0	0xFA05F101  LSL	R1, R5, R1
0x03E4	0x43C9    MVN	R1, R1
0x03E6	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x03E8	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x03EC	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x03EE	0x0D61    LSRS	R1, R4, #21
0x03F0	0x0109    LSLS	R1, R1, #4
0x03F2	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x03F6	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x03F8	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x03FA	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x03FE	0xF1B14F00  CMP	R1, #-2147483648
0x0402	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0404	0x4913    LDR	R1, [PC, #76]
0x0406	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0408	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x040A	0x4913    LDR	R1, [PC, #76]
0x040C	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x040E	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x0412	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x0414	0xEA4F018A  LSL	R1, R10, #2
0x0418	0xEB090101  ADD	R1, R9, R1, LSL #0
0x041C	0x6809    LDR	R1, [R1, #0]
0x041E	0xF1B13FFF  CMP	R1, #-1
0x0422	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x0424	0xF1090134  ADD	R1, R9, #52
0x0428	0xEA4F038A  LSL	R3, R10, #2
0x042C	0x18C9    ADDS	R1, R1, R3
0x042E	0x6809    LDR	R1, [R1, #0]
0x0430	0x460A    MOV	R2, R1
0x0432	0xEB090103  ADD	R1, R9, R3, LSL #0
0x0436	0x6809    LDR	R1, [R1, #0]
0x0438	0x4608    MOV	R0, R1
0x043A	0x4611    MOV	R1, R2
0x043C	0xF7FFFE8E  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x0440	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x0444	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0446	0xF8DDE000  LDR	LR, [SP, #0]
0x044A	0xB001    ADD	SP, SP, #4
0x044C	0x4770    BX	LR
0x044E	0xBF00    NOP
0x0450	0x03004242  	RCC_APB2ENRbits+0
0x0454	0x001C4001  	AFIO_MAPR2+0
0x0458	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x015C	0xB083    SUB	SP, SP, #12
0x015E	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x0162	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x0166	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0168	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x016A	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x016E	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0170	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x0172	0x4A19    LDR	R2, [PC, #100]
0x0174	0x9202    STR	R2, [SP, #8]
0x0176	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0178	0x4A18    LDR	R2, [PC, #96]
0x017A	0x9202    STR	R2, [SP, #8]
0x017C	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x017E	0x4A18    LDR	R2, [PC, #96]
0x0180	0x9202    STR	R2, [SP, #8]
0x0182	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0184	0x4A17    LDR	R2, [PC, #92]
0x0186	0x9202    STR	R2, [SP, #8]
0x0188	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x018A	0x4A17    LDR	R2, [PC, #92]
0x018C	0x9202    STR	R2, [SP, #8]
0x018E	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0190	0x4A16    LDR	R2, [PC, #88]
0x0192	0x9202    STR	R2, [SP, #8]
0x0194	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x0196	0x4A16    LDR	R2, [PC, #88]
0x0198	0x9202    STR	R2, [SP, #8]
0x019A	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x019C	0x2800    CMP	R0, #0
0x019E	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x01A0	0x2801    CMP	R0, #1
0x01A2	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x01A4	0x2802    CMP	R0, #2
0x01A6	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x01A8	0x2803    CMP	R0, #3
0x01AA	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x01AC	0x2804    CMP	R0, #4
0x01AE	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x01B0	0x2805    CMP	R0, #5
0x01B2	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x01B4	0x2806    CMP	R0, #6
0x01B6	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x01B8	0x2201    MOVS	R2, #1
0x01BA	0xB212    SXTH	R2, R2
0x01BC	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x01BE	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x01C2	0x9802    LDR	R0, [SP, #8]
0x01C4	0x460A    MOV	R2, R1
0x01C6	0xF8BD1004  LDRH	R1, [SP, #4]
0x01CA	0xF000FA9B  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x01CE	0xF8DDE000  LDR	LR, [SP, #0]
0x01D2	0xB003    ADD	SP, SP, #12
0x01D4	0x4770    BX	LR
0x01D6	0xBF00    NOP
0x01D8	0x08004001  	#1073809408
0x01DC	0x0C004001  	#1073810432
0x01E0	0x10004001  	#1073811456
0x01E4	0x14004001  	#1073812480
0x01E8	0x18004001  	#1073813504
0x01EC	0x1C004001  	#1073814528
0x01F0	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
__Lib_SPI_123_SPIx_Init_Advanced:
;__Lib_SPI_123.c, 53 :: 		
; config start address is: 8 (R2)
; clock_divider start address is: 4 (R1)
; base start address is: 0 (R0)
0x06A0	0xB081    SUB	SP, SP, #4
; config end address is: 8 (R2)
; clock_divider end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; clock_divider start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_SPI_123.c, 56 :: 		
0x06A2	0x2300    MOVS	R3, #0
0x06A4	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 58 :: 		
0x06A6	0x00CB    LSLS	R3, R1, #3
0x06A8	0xB29B    UXTH	R3, R3
; clock_divider end address is: 4 (R1)
0x06AA	0xEA420303  ORR	R3, R2, R3, LSL #0
;__Lib_SPI_123.c, 60 :: 		
0x06AE	0x6804    LDR	R4, [R0, #0]
0x06B0	0xB29B    UXTH	R3, R3
0x06B2	0xEA440303  ORR	R3, R4, R3, LSL #0
0x06B6	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 61 :: 		
0x06B8	0x1D05    ADDS	R5, R0, #4
0x06BA	0x1413    ASRS	R3, R2, #16
; config end address is: 8 (R2)
0x06BC	0x461C    MOV	R4, R3
0x06BE	0x682B    LDR	R3, [R5, #0]
0x06C0	0xF3640382  BFI	R3, R4, #2, #1
0x06C4	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 63 :: 		
0x06C6	0xF200051C  ADDW	R5, R0, #28
0x06CA	0x2400    MOVS	R4, #0
0x06CC	0x682B    LDR	R3, [R5, #0]
0x06CE	0xF36423CB  BFI	R3, R4, #11, #1
0x06D2	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 64 :: 		
0x06D4	0x2401    MOVS	R4, #1
0x06D6	0x6803    LDR	R3, [R0, #0]
0x06D8	0xF3641386  BFI	R3, R4, #6, #1
0x06DC	0x6003    STR	R3, [R0, #0]
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 65 :: 		
L_end_SPIx_Init_Advanced:
0x06DE	0xB001    ADD	SP, SP, #4
0x06E0	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Init_Advanced
easymx_v7_STM32F107VC__spiInit_2:
;__em_f107vc_spi.c, 33 :: 		static T_mikrobus_ret _spiInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x0D2C	0xB081    SUB	SP, SP, #4
0x0D2E	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_spi.c, 35 :: 		SPI3_Init_Advanced( (unsigned char)cfg[0], (long)cfg[1], &_GPIO_MODULE_SPI3_PC10_11_12 );
0x0D32	0x1D01    ADDS	R1, R0, #4
0x0D34	0x680A    LDR	R2, [R1, #0]
0x0D36	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x0D38	0xB2C8    UXTB	R0, R1
0x0D3A	0x4611    MOV	R1, R2
0x0D3C	0x4A03    LDR	R2, [PC, #12]
0x0D3E	0xF7FFFE8F  BL	_SPI3_Init_Advanced+0
;__em_f107vc_spi.c, 36 :: 		return _MIKROBUS_OK;
0x0D42	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_spi.c, 37 :: 		}
L_end__spiInit_2:
0x0D44	0xF8DDE000  LDR	LR, [SP, #0]
0x0D48	0xB001    ADD	SP, SP, #4
0x0D4A	0x4770    BX	LR
0x0D4C	0x19F80000  	__GPIO_MODULE_SPI3_PC10_11_12+0
; end of easymx_v7_STM32F107VC__spiInit_2
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x13A0	0xB081    SUB	SP, SP, #4
0x13A2	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x13A6	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x13A8	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x13AA	0xF7FFFF0D  BL	easymx_v7_STM32F107VC__log_init1+0
0x13AE	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x13B0	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x13B2	0xF7FFFC9F  BL	easymx_v7_STM32F107VC__log_init2+0
0x13B6	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x13B8	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x13BA	0xF7FFFC63  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x13BE	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x13C0	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x13C2	0xF7FFFC7B  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x13C6	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x13C8	0x2001    MOVS	R0, #1
0x13CA	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x13CC	0x2800    CMP	R0, #0
0x13CE	0xD0EB    BEQ	L_mikrobus_logInit90
0x13D0	0x2801    CMP	R0, #1
0x13D2	0xD0ED    BEQ	L_mikrobus_logInit91
0x13D4	0x2820    CMP	R0, #32
0x13D6	0xD0EF    BEQ	L_mikrobus_logInit92
0x13D8	0x2830    CMP	R0, #48
0x13DA	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x13DC	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x13DE	0xF8DDE000  LDR	LR, [SP, #0]
0x13E2	0xB001    ADD	SP, SP, #4
0x13E4	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x11C8	0xB081    SUB	SP, SP, #4
0x11CA	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x11CE	0x4909    LDR	R1, [PC, #36]
0x11D0	0xB402    PUSH	(R1)
0x11D2	0xF2400300  MOVW	R3, #0
0x11D6	0xF2400200  MOVW	R2, #0
0x11DA	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x11DE	0xF7FFFC83  BL	_UART3_Init_Advanced+0
0x11E2	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x11E4	0x4A04    LDR	R2, [PC, #16]
0x11E6	0x4905    LDR	R1, [PC, #20]
0x11E8	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x11EA	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x11EC	0xF8DDE000  LDR	LR, [SP, #0]
0x11F0	0xB001    ADD	SP, SP, #4
0x11F2	0x4770    BX	LR
0x11F4	0x1A640000  	__GPIO_MODULE_USART3_PD89+0
0x11F8	0x09750000  	_UART3_Write+0
0x11FC	0x00A82000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0AE8	0xB081    SUB	SP, SP, #4
0x0AEA	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0AEE	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x0AF0	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0AF2	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0AF4	0xB408    PUSH	(R3)
0x0AF6	0xB293    UXTH	R3, R2
0x0AF8	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0AFA	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0AFC	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0AFE	0xF7FFFCAD  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0B02	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x0B04	0xF8DDE000  LDR	LR, [SP, #0]
0x0B08	0xB001    ADD	SP, SP, #4
0x0B0A	0x4770    BX	LR
0x0B0C	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x045C	0xB089    SUB	SP, SP, #36
0x045E	0xF8CDE000  STR	LR, [SP, #0]
0x0462	0x4683    MOV	R11, R0
0x0464	0xB298    UXTH	R0, R3
0x0466	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x0468	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x046C	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x046E	0xAC04    ADD	R4, SP, #16
0x0470	0xF8AD1004  STRH	R1, [SP, #4]
0x0474	0xF8AD0008  STRH	R0, [SP, #8]
0x0478	0x4620    MOV	R0, R4
0x047A	0xF7FFFF01  BL	_RCC_GetClocksFrequency+0
0x047E	0xF8BD0008  LDRH	R0, [SP, #8]
0x0482	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x0486	0x4C64    LDR	R4, [PC, #400]
0x0488	0x45A3    CMP	R11, R4
0x048A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x048C	0x2501    MOVS	R5, #1
0x048E	0xB26D    SXTB	R5, R5
0x0490	0x4C62    LDR	R4, [PC, #392]
0x0492	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x0494	0x4D62    LDR	R5, [PC, #392]
0x0496	0x4C63    LDR	R4, [PC, #396]
0x0498	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x049A	0x4D63    LDR	R5, [PC, #396]
0x049C	0x4C63    LDR	R4, [PC, #396]
0x049E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x04A0	0x4D63    LDR	R5, [PC, #396]
0x04A2	0x4C64    LDR	R4, [PC, #400]
0x04A4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x04A6	0x4D64    LDR	R5, [PC, #400]
0x04A8	0x4C64    LDR	R4, [PC, #400]
0x04AA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x04AC	0x9C07    LDR	R4, [SP, #28]
0x04AE	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x04B0	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x04B2	0x4C63    LDR	R4, [PC, #396]
0x04B4	0x45A3    CMP	R11, R4
0x04B6	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x04B8	0x2501    MOVS	R5, #1
0x04BA	0xB26D    SXTB	R5, R5
0x04BC	0x4C61    LDR	R4, [PC, #388]
0x04BE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x04C0	0x4D61    LDR	R5, [PC, #388]
0x04C2	0x4C58    LDR	R4, [PC, #352]
0x04C4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x04C6	0x4D61    LDR	R5, [PC, #388]
0x04C8	0x4C58    LDR	R4, [PC, #352]
0x04CA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x04CC	0x4D60    LDR	R5, [PC, #384]
0x04CE	0x4C59    LDR	R4, [PC, #356]
0x04D0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x04D2	0x4D60    LDR	R5, [PC, #384]
0x04D4	0x4C59    LDR	R4, [PC, #356]
0x04D6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x04D8	0x9C06    LDR	R4, [SP, #24]
0x04DA	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x04DC	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x04DE	0x4C5E    LDR	R4, [PC, #376]
0x04E0	0x45A3    CMP	R11, R4
0x04E2	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x04E4	0x2501    MOVS	R5, #1
0x04E6	0xB26D    SXTB	R5, R5
0x04E8	0x4C5C    LDR	R4, [PC, #368]
0x04EA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x04EC	0x4D5C    LDR	R5, [PC, #368]
0x04EE	0x4C4D    LDR	R4, [PC, #308]
0x04F0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x04F2	0x4D5C    LDR	R5, [PC, #368]
0x04F4	0x4C4D    LDR	R4, [PC, #308]
0x04F6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x04F8	0x4D5B    LDR	R5, [PC, #364]
0x04FA	0x4C4E    LDR	R4, [PC, #312]
0x04FC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x04FE	0x4D5B    LDR	R5, [PC, #364]
0x0500	0x4C4E    LDR	R4, [PC, #312]
0x0502	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x0504	0x9C06    LDR	R4, [SP, #24]
0x0506	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x0508	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x050A	0x4C59    LDR	R4, [PC, #356]
0x050C	0x45A3    CMP	R11, R4
0x050E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x0510	0x2501    MOVS	R5, #1
0x0512	0xB26D    SXTB	R5, R5
0x0514	0x4C57    LDR	R4, [PC, #348]
0x0516	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x0518	0x4D57    LDR	R5, [PC, #348]
0x051A	0x4C42    LDR	R4, [PC, #264]
0x051C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x051E	0x4D57    LDR	R5, [PC, #348]
0x0520	0x4C42    LDR	R4, [PC, #264]
0x0522	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x0524	0x4D56    LDR	R5, [PC, #344]
0x0526	0x4C43    LDR	R4, [PC, #268]
0x0528	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x052A	0x4D56    LDR	R5, [PC, #344]
0x052C	0x4C43    LDR	R4, [PC, #268]
0x052E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x0530	0x9C06    LDR	R4, [SP, #24]
0x0532	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x0534	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x0536	0x4C54    LDR	R4, [PC, #336]
0x0538	0x45A3    CMP	R11, R4
0x053A	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x053C	0x2501    MOVS	R5, #1
0x053E	0xB26D    SXTB	R5, R5
0x0540	0x4C52    LDR	R4, [PC, #328]
0x0542	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x0544	0x4D52    LDR	R5, [PC, #328]
0x0546	0x4C37    LDR	R4, [PC, #220]
0x0548	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x054A	0x4D52    LDR	R5, [PC, #328]
0x054C	0x4C37    LDR	R4, [PC, #220]
0x054E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x0550	0x4D51    LDR	R5, [PC, #324]
0x0552	0x4C38    LDR	R4, [PC, #224]
0x0554	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x0556	0x4D51    LDR	R5, [PC, #324]
0x0558	0x4C38    LDR	R4, [PC, #224]
0x055A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x055C	0x9C06    LDR	R4, [SP, #24]
0x055E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x0560	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x0564	0xF8AD0008  STRH	R0, [SP, #8]
0x0568	0x4630    MOV	R0, R6
0x056A	0xF7FFFEEF  BL	_GPIO_Alternate_Function_Enable+0
0x056E	0xF8BD0008  LDRH	R0, [SP, #8]
0x0572	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x0576	0xF10B0510  ADD	R5, R11, #16
0x057A	0x2400    MOVS	R4, #0
0x057C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x057E	0xF10B0510  ADD	R5, R11, #16
0x0582	0x682C    LDR	R4, [R5, #0]
0x0584	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x0586	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x0588	0xF10B050C  ADD	R5, R11, #12
0x058C	0x2400    MOVS	R4, #0
0x058E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x0590	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x0592	0xF4406080  ORR	R0, R0, #1024
0x0596	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x0598	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x059A	0xF10B050C  ADD	R5, R11, #12
0x059E	0x682C    LDR	R4, [R5, #0]
0x05A0	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x05A2	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x05A4	0xF10B060C  ADD	R6, R11, #12
0x05A8	0x2501    MOVS	R5, #1
0x05AA	0x6834    LDR	R4, [R6, #0]
0x05AC	0xF365344D  BFI	R4, R5, #13, #1
0x05B0	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x05B2	0xF10B060C  ADD	R6, R11, #12
0x05B6	0x2501    MOVS	R5, #1
0x05B8	0x6834    LDR	R4, [R6, #0]
0x05BA	0xF36504C3  BFI	R4, R5, #3, #1
0x05BE	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x05C0	0xF10B060C  ADD	R6, R11, #12
0x05C4	0x2501    MOVS	R5, #1
0x05C6	0x6834    LDR	R4, [R6, #0]
0x05C8	0xF3650482  BFI	R4, R5, #2, #1
0x05CC	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x05CE	0xF10B0514  ADD	R5, R11, #20
0x05D2	0x2400    MOVS	R4, #0
0x05D4	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x05D6	0x9D03    LDR	R5, [SP, #12]
0x05D8	0x2419    MOVS	R4, #25
0x05DA	0x4365    MULS	R5, R4, R5
0x05DC	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x05E0	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x05E4	0x2464    MOVS	R4, #100
0x05E6	0xFBB7F4F4  UDIV	R4, R7, R4
0x05EA	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x05EC	0x0935    LSRS	R5, R6, #4
0x05EE	0x2464    MOVS	R4, #100
0x05F0	0x436C    MULS	R4, R5, R4
0x05F2	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x05F4	0x0124    LSLS	R4, R4, #4
0x05F6	0xF2040532  ADDW	R5, R4, #50
0x05FA	0x2464    MOVS	R4, #100
0x05FC	0xFBB5F4F4  UDIV	R4, R5, R4
0x0600	0xF004040F  AND	R4, R4, #15
0x0604	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x0608	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x060C	0xB2A4    UXTH	R4, R4
0x060E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x0610	0xF8DDE000  LDR	LR, [SP, #0]
0x0614	0xB009    ADD	SP, SP, #36
0x0616	0x4770    BX	LR
0x0618	0x38004001  	USART1_SR+0
0x061C	0x03384242  	RCC_APB2ENR+0
0x0620	0x09E50000  	_UART1_Write+0
0x0624	0x00C82000  	_UART_Wr_Ptr+0
0x0628	0xFFFFFFFF  	_UART1_Read+0
0x062C	0x00CC2000  	_UART_Rd_Ptr+0
0x0630	0xFFFFFFFF  	_UART1_Data_Ready+0
0x0634	0x00D02000  	_UART_Rdy_Ptr+0
0x0638	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x063C	0x00D42000  	_UART_Tx_Idle_Ptr+0
0x0640	0x44004000  	USART2_SR+0
0x0644	0x03C44242  	RCC_APB1ENR+0
0x0648	0x09210000  	_UART2_Write+0
0x064C	0xFFFFFFFF  	_UART2_Read+0
0x0650	0xFFFFFFFF  	_UART2_Data_Ready+0
0x0654	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0658	0x48004000  	USART3_SR+0
0x065C	0x03C84242  	RCC_APB1ENR+0
0x0660	0x09750000  	_UART3_Write+0
0x0664	0xFFFFFFFF  	_UART3_Read+0
0x0668	0xFFFFFFFF  	_UART3_Data_Ready+0
0x066C	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x0670	0x4C004000  	UART4_SR+0
0x0674	0x03CC4242  	RCC_APB1ENR+0
0x0678	0x09590000  	_UART4_Write+0
0x067C	0xFFFFFFFF  	_UART4_Read+0
0x0680	0xFFFFFFFF  	_UART4_Data_Ready+0
0x0684	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0688	0x50004000  	UART5_SR+0
0x068C	0x03D04242  	RCC_APB1ENR+0
0x0690	0x093D0000  	_UART5_Write+0
0x0694	0xFFFFFFFF  	_UART5_Read+0
0x0698	0xFFFFFFFF  	_UART5_Data_Ready+0
0x069C	0xFFFFFFFF  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 452 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0280	0xB082    SUB	SP, SP, #8
0x0282	0xF8CDE000  STR	LR, [SP, #0]
0x0286	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 455 :: 		
0x0288	0x4619    MOV	R1, R3
0x028A	0x9101    STR	R1, [SP, #4]
0x028C	0xF7FFFF60  BL	_Get_Fosc_kHz+0
0x0290	0xF24031E8  MOVW	R1, #1000
0x0294	0xFB00F201  MUL	R2, R0, R1
0x0298	0x9901    LDR	R1, [SP, #4]
0x029A	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 458 :: 		
0x029C	0x491F    LDR	R1, [PC, #124]
0x029E	0x7809    LDRB	R1, [R1, #0]
0x02A0	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x02A4	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 459 :: 		
0x02A6	0x491E    LDR	R1, [PC, #120]
0x02A8	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x02AA	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x02AC	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 461 :: 		
0x02AE	0x1D1A    ADDS	R2, R3, #4
0x02B0	0x6819    LDR	R1, [R3, #0]
0x02B2	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x02B4	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 463 :: 		
0x02B6	0x4919    LDR	R1, [PC, #100]
0x02B8	0x8809    LDRH	R1, [R1, #0]
0x02BA	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x02BE	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 464 :: 		
0x02C0	0x4917    LDR	R1, [PC, #92]
0x02C2	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x02C4	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x02C6	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 466 :: 		
0x02C8	0xF2030208  ADDW	R2, R3, #8
0x02CC	0x1D19    ADDS	R1, R3, #4
0x02CE	0x6809    LDR	R1, [R1, #0]
0x02D0	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x02D2	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 468 :: 		
0x02D4	0x4911    LDR	R1, [PC, #68]
0x02D6	0x8809    LDRH	R1, [R1, #0]
0x02D8	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x02DC	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 469 :: 		
0x02DE	0x4910    LDR	R1, [PC, #64]
0x02E0	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x02E2	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x02E4	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 471 :: 		
0x02E6	0xF203020C  ADDW	R2, R3, #12
0x02EA	0x1D19    ADDS	R1, R3, #4
0x02EC	0x6809    LDR	R1, [R1, #0]
0x02EE	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x02F0	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 473 :: 		
0x02F2	0x490A    LDR	R1, [PC, #40]
0x02F4	0x8809    LDRH	R1, [R1, #0]
0x02F6	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x02FA	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 474 :: 		
0x02FC	0x4909    LDR	R1, [PC, #36]
0x02FE	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0300	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0302	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x0304	0xF2030210  ADDW	R2, R3, #16
0x0308	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x030C	0x6809    LDR	R1, [R1, #0]
0x030E	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x0312	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
L_end_RCC_GetClocksFrequency:
0x0314	0xF8DDE000  LDR	LR, [SP, #0]
0x0318	0xB002    ADD	SP, SP, #8
0x031A	0x4770    BX	LR
0x031C	0x10044002  	RCC_CFGRbits+0
0x0320	0x1BBB0000  	__Lib_System_105_107_APBAHBPrescTable+0
0x0324	0x15BC0000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0150	0x4801    LDR	R0, [PC, #4]
0x0152	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0154	0x4770    BX	LR
0x0156	0xBF00    NOP
0x0158	0x00BC2000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x0CF4	0xB081    SUB	SP, SP, #4
0x0CF6	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x0CFA	0x4909    LDR	R1, [PC, #36]
0x0CFC	0xB402    PUSH	(R1)
0x0CFE	0xF2400300  MOVW	R3, #0
0x0D02	0xF2400200  MOVW	R2, #0
0x0D06	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x0D0A	0xF7FFFDF5  BL	_UART2_Init_Advanced+0
0x0D0E	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x0D10	0x4A04    LDR	R2, [PC, #16]
0x0D12	0x4905    LDR	R1, [PC, #20]
0x0D14	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x0D16	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x0D18	0xF8DDE000  LDR	LR, [SP, #0]
0x0D1C	0xB001    ADD	SP, SP, #4
0x0D1E	0x4770    BX	LR
0x0D20	0x1AD00000  	__GPIO_MODULE_USART2_PD56+0
0x0D24	0x09210000  	_UART2_Write+0
0x0D28	0x00A82000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x08F8	0xB081    SUB	SP, SP, #4
0x08FA	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x08FE	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x0900	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0902	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0904	0xB408    PUSH	(R3)
0x0906	0xB293    UXTH	R3, R2
0x0908	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x090A	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x090C	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x090E	0xF7FFFDA5  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0912	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x0914	0xF8DDE000  LDR	LR, [SP, #0]
0x0918	0xB001    ADD	SP, SP, #4
0x091A	0x4770    BX	LR
0x091C	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x0C84	0xB081    SUB	SP, SP, #4
0x0C86	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x0C8A	0x4909    LDR	R1, [PC, #36]
0x0C8C	0xB402    PUSH	(R1)
0x0C8E	0xF2400300  MOVW	R3, #0
0x0C92	0xF2400200  MOVW	R2, #0
0x0C96	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x0C9A	0xF7FFFEB1  BL	_UART1_Init_Advanced+0
0x0C9E	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x0CA0	0x4A04    LDR	R2, [PC, #16]
0x0CA2	0x4905    LDR	R1, [PC, #20]
0x0CA4	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x0CA6	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x0CA8	0xF8DDE000  LDR	LR, [SP, #0]
0x0CAC	0xB001    ADD	SP, SP, #4
0x0CAE	0x4770    BX	LR
0x0CB0	0x198C0000  	__GPIO_MODULE_USART1_PA9_10+0
0x0CB4	0x09E50000  	_UART1_Write+0
0x0CB8	0x00A82000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0A00	0xB081    SUB	SP, SP, #4
0x0A02	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0A06	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x0A08	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0A0A	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0A0C	0xB408    PUSH	(R3)
0x0A0E	0xB293    UXTH	R3, R2
0x0A10	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0A12	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0A14	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0A16	0xF7FFFD21  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0A1A	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x0A1C	0xF8DDE000  LDR	LR, [SP, #0]
0x0A20	0xB001    ADD	SP, SP, #4
0x0A22	0x4770    BX	LR
0x0A24	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x0CBC	0xB081    SUB	SP, SP, #4
0x0CBE	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x0CC2	0x4909    LDR	R1, [PC, #36]
0x0CC4	0xB402    PUSH	(R1)
0x0CC6	0xF2400300  MOVW	R3, #0
0x0CCA	0xF2400200  MOVW	R2, #0
0x0CCE	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x0CD2	0xF7FFFE11  BL	_UART2_Init_Advanced+0
0x0CD6	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x0CD8	0x4A04    LDR	R2, [PC, #16]
0x0CDA	0x4905    LDR	R1, [PC, #20]
0x0CDC	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x0CDE	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x0CE0	0xF8DDE000  LDR	LR, [SP, #0]
0x0CE4	0xB001    ADD	SP, SP, #4
0x0CE6	0x4770    BX	LR
0x0CE8	0x1AD00000  	__GPIO_MODULE_USART2_PD56+0
0x0CEC	0x09210000  	_UART2_Write+0
0x0CF0	0x00A82000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x145C	0xB083    SUB	SP, SP, #12
0x145E	0xF8CDE000  STR	LR, [SP, #0]
0x1462	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x1464	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x1466	0x220D    MOVS	R2, #13
0x1468	0xF88D2008  STRB	R2, [SP, #8]
0x146C	0x220A    MOVS	R2, #10
0x146E	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x1472	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x1474	0xF7FFFC6C  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x1478	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x147A	0x7802    LDRB	R2, [R0, #0]
0x147C	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x147E	0x9001    STR	R0, [SP, #4]
0x1480	0xF7FFFC66  BL	easymx_v7_STM32F107VC__log_write+0
0x1484	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x1486	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x1488	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x148A	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x148C	0x7802    LDRB	R2, [R0, #0]
0x148E	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x1490	0x9001    STR	R0, [SP, #4]
0x1492	0xF7FFFC5D  BL	easymx_v7_STM32F107VC__log_write+0
0x1496	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x1498	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x149A	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x149C	0xAA02    ADD	R2, SP, #8
0x149E	0x4610    MOV	R0, R2
0x14A0	0xF7FFFC56  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x14A4	0xF10D0209  ADD	R2, SP, #9
0x14A8	0x4610    MOV	R0, R2
0x14AA	0xF7FFFC51  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x14AE	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x14B0	0x2006    MOVS	R0, #6
0x14B2	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x14B4	0x2900    CMP	R1, #0
0x14B6	0xD0DD    BEQ	L_mikrobus_logWrite97
0x14B8	0x2901    CMP	R1, #1
0x14BA	0xD0DE    BEQ	L_mikrobus_logWrite98
0x14BC	0x2902    CMP	R1, #2
0x14BE	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x14C0	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x14C2	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x14C4	0xF8DDE000  LDR	LR, [SP, #0]
0x14C8	0xB003    ADD	SP, SP, #12
0x14CA	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x0D50	0xB081    SUB	SP, SP, #4
0x0D52	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x0D56	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x0D58	0xB2CC    UXTB	R4, R1
0x0D5A	0xB2A0    UXTH	R0, R4
0x0D5C	0x4C03    LDR	R4, [PC, #12]
0x0D5E	0x6824    LDR	R4, [R4, #0]
0x0D60	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x0D62	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x0D64	0xF8DDE000  LDR	LR, [SP, #0]
0x0D68	0xB001    ADD	SP, SP, #4
0x0D6A	0x4770    BX	LR
0x0D6C	0x00A82000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_SPI1_Write:
;__Lib_SPI_123.c, 78 :: 		
; data_out start address is: 0 (R0)
0x0990	0xB081    SUB	SP, SP, #4
0x0992	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 79 :: 		
0x0996	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0998	0x4803    LDR	R0, [PC, #12]
0x099A	0xF7FFFCC5  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 80 :: 		
L_end_SPI1_Write:
0x099E	0xF8DDE000  LDR	LR, [SP, #0]
0x09A2	0xB001    ADD	SP, SP, #4
0x09A4	0x4770    BX	LR
0x09A6	0xBF00    NOP
0x09A8	0x30004001  	SPI1_CR1+0
; end of _SPI1_Write
__Lib_SPI_123_SPIx_Read:
;__Lib_SPI_123.c, 67 :: 		
; data_out start address is: 4 (R1)
; base start address is: 0 (R0)
0x0328	0xB081    SUB	SP, SP, #4
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; data_out start address is: 4 (R1)
;__Lib_SPI_123.c, 68 :: 		
0x032A	0xF200020C  ADDW	R2, R0, #12
0x032E	0x6011    STR	R1, [R2, #0]
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 69 :: 		
L___Lib_SPI_123_SPIx_Read0:
; base start address is: 0 (R0)
0x0330	0xF2000208  ADDW	R2, R0, #8
0x0334	0x6813    LDR	R3, [R2, #0]
0x0336	0xF3C30200  UBFX	R2, R3, #0, #1
0x033A	0xB902    CBNZ	R2, L___Lib_SPI_123_SPIx_Read1
;__Lib_SPI_123.c, 70 :: 		
0x033C	0xE7F8    B	L___Lib_SPI_123_SPIx_Read0
L___Lib_SPI_123_SPIx_Read1:
;__Lib_SPI_123.c, 71 :: 		
0x033E	0xF200020C  ADDW	R2, R0, #12
; base end address is: 0 (R0)
0x0342	0x6812    LDR	R2, [R2, #0]
0x0344	0xB290    UXTH	R0, R2
;__Lib_SPI_123.c, 72 :: 		
L_end_SPIx_Read:
0x0346	0xB001    ADD	SP, SP, #4
0x0348	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Read
_SPI2_Write:
;__Lib_SPI_123.c, 103 :: 		
; data_out start address is: 0 (R0)
0x09C8	0xB081    SUB	SP, SP, #4
0x09CA	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 104 :: 		
0x09CE	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x09D0	0x4803    LDR	R0, [PC, #12]
0x09D2	0xF7FFFCA9  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 105 :: 		
L_end_SPI2_Write:
0x09D6	0xF8DDE000  LDR	LR, [SP, #0]
0x09DA	0xB001    ADD	SP, SP, #4
0x09DC	0x4770    BX	LR
0x09DE	0xBF00    NOP
0x09E0	0x38004000  	SPI2_CR1+0
; end of _SPI2_Write
_SPI3_Write:
;__Lib_SPI_123.c, 129 :: 		
; data_out start address is: 0 (R0)
0x09AC	0xB081    SUB	SP, SP, #4
0x09AE	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 130 :: 		
0x09B2	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x09B4	0x4803    LDR	R0, [PC, #12]
0x09B6	0xF7FFFCB7  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 131 :: 		
L_end_SPI3_Write:
0x09BA	0xF8DDE000  LDR	LR, [SP, #0]
0x09BE	0xB001    ADD	SP, SP, #4
0x09C0	0x4770    BX	LR
0x09C2	0xBF00    NOP
0x09C4	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x09E4	0xB081    SUB	SP, SP, #4
0x09E6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x09EA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x09EC	0x4803    LDR	R0, [PC, #12]
0x09EE	0xF7FFFE79  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x09F2	0xF8DDE000  LDR	LR, [SP, #0]
0x09F6	0xB001    ADD	SP, SP, #4
0x09F8	0x4770    BX	LR
0x09FA	0xBF00    NOP
0x09FC	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x06E4	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x06E6	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x06EA	0x4601    MOV	R1, R0
0x06EC	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x06F0	0x680B    LDR	R3, [R1, #0]
0x06F2	0xF3C312C0  UBFX	R2, R3, #7, #1
0x06F6	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x06F8	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x06FA	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x06FC	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x06FE	0xB001    ADD	SP, SP, #4
0x0700	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x0920	0xB081    SUB	SP, SP, #4
0x0922	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x0926	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0928	0x4803    LDR	R0, [PC, #12]
0x092A	0xF7FFFEDB  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x092E	0xF8DDE000  LDR	LR, [SP, #0]
0x0932	0xB001    ADD	SP, SP, #4
0x0934	0x4770    BX	LR
0x0936	0xBF00    NOP
0x0938	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x0974	0xB081    SUB	SP, SP, #4
0x0976	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x097A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x097C	0x4803    LDR	R0, [PC, #12]
0x097E	0xF7FFFEB1  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x0982	0xF8DDE000  LDR	LR, [SP, #0]
0x0986	0xB001    ADD	SP, SP, #4
0x0988	0x4770    BX	LR
0x098A	0xBF00    NOP
0x098C	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x0958	0xB081    SUB	SP, SP, #4
0x095A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x095E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0960	0x4803    LDR	R0, [PC, #12]
0x0962	0xF7FFFEBF  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x0966	0xF8DDE000  LDR	LR, [SP, #0]
0x096A	0xB001    ADD	SP, SP, #4
0x096C	0x4770    BX	LR
0x096E	0xBF00    NOP
0x0970	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x093C	0xB081    SUB	SP, SP, #4
0x093E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x0942	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0944	0x4803    LDR	R0, [PC, #12]
0x0946	0xF7FFFECD  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x094A	0xF8DDE000  LDR	LR, [SP, #0]
0x094E	0xB001    ADD	SP, SP, #4
0x0950	0x4770    BX	LR
0x0952	0xBF00    NOP
0x0954	0x50004000  	UART5_SR+0
; end of _UART5_Write
_applicationInit:
;Click_ExcelonLP_STM.c, 53 :: 		void applicationInit()
0x1708	0xB081    SUB	SP, SP, #4
0x170A	0xF8CDE000  STR	LR, [SP, #0]
;Click_ExcelonLP_STM.c, 55 :: 		excelonlp_spiDriverInit( (T_EXCELONLP_P)&_MIKROBUS1_GPIO, (T_EXCELONLP_P)&_MIKROBUS1_SPI );
0x170E	0x4904    LDR	R1, [PC, #16]
0x1710	0x4804    LDR	R0, [PC, #16]
0x1712	0xF7FFFEDB  BL	_excelonlp_spiDriverInit+0
;Click_ExcelonLP_STM.c, 56 :: 		}
L_end_applicationInit:
0x1716	0xF8DDE000  LDR	LR, [SP, #0]
0x171A	0xB001    ADD	SP, SP, #4
0x171C	0x4770    BX	LR
0x171E	0xBF00    NOP
0x1720	0x1BE40000  	__MIKROBUS1_SPI+0
0x1724	0x1B3C0000  	__MIKROBUS1_GPIO+0
; end of _applicationInit
_excelonlp_spiDriverInit:
;__excelonlp_driver.c, 56 :: 		void excelonlp_spiDriverInit(T_EXCELONLP_P gpioObj, T_EXCELONLP_P spiObj)
; spiObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x14CC	0xB081    SUB	SP, SP, #4
0x14CE	0xF8CDE000  STR	LR, [SP, #0]
0x14D2	0x4603    MOV	R3, R0
; spiObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 12 (R3)
; spiObj start address is: 4 (R1)
;__excelonlp_driver.c, 58 :: 		hal_spiMap( (T_HAL_P)spiObj );
0x14D4	0x4608    MOV	R0, R1
; spiObj end address is: 4 (R1)
0x14D6	0xF7FFFB87  BL	__excelonlp_driver_hal_spiMap+0
;__excelonlp_driver.c, 59 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x14DA	0x4618    MOV	R0, R3
; gpioObj end address is: 12 (R3)
0x14DC	0xF7FFFB74  BL	__excelonlp_driver_hal_gpioMap+0
;__excelonlp_driver.c, 61 :: 		hal_gpio_csSet(1);
0x14E0	0x2001    MOVS	R0, #1
0x14E2	0x4C05    LDR	R4, [PC, #20]
0x14E4	0x6824    LDR	R4, [R4, #0]
0x14E6	0x47A0    BLX	R4
;__excelonlp_driver.c, 62 :: 		hal_gpio_pwmSet(1);
0x14E8	0x2001    MOVS	R0, #1
0x14EA	0x4C04    LDR	R4, [PC, #16]
0x14EC	0x6824    LDR	R4, [R4, #0]
0x14EE	0x47A0    BLX	R4
;__excelonlp_driver.c, 63 :: 		}
L_end_excelonlp_spiDriverInit:
0x14F0	0xF8DDE000  LDR	LR, [SP, #0]
0x14F4	0xB001    ADD	SP, SP, #4
0x14F6	0x4770    BX	LR
0x14F8	0x00AC2000  	__excelonlp_driver_hal_gpio_csSet+0
0x14FC	0x00B42000  	__excelonlp_driver_hal_gpio_pwmSet+0
; end of _excelonlp_spiDriverInit
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x11BC	0x4901    LDR	R1, [PC, #4]
0x11BE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x11C0	0x4770    BX	LR
0x11C2	0xBF00    NOP
0x11C4	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1110	0x4901    LDR	R1, [PC, #4]
0x1112	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x1114	0x4770    BX	LR
0x1116	0xBF00    NOP
0x1118	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1104	0x4901    LDR	R1, [PC, #4]
0x1106	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x1108	0x4770    BX	LR
0x110A	0xBF00    NOP
0x110C	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1128	0x4901    LDR	R1, [PC, #4]
0x112A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x112C	0x4770    BX	LR
0x112E	0xBF00    NOP
0x1130	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x111C	0x4901    LDR	R1, [PC, #4]
0x111E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x1120	0x4770    BX	LR
0x1122	0xBF00    NOP
0x1124	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0C78	0x4901    LDR	R1, [PC, #4]
0x0C7A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x0C7C	0x4770    BX	LR
0x0C7E	0xBF00    NOP
0x0C80	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0B74	0x4901    LDR	R1, [PC, #4]
0x0B76	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x0B78	0x4770    BX	LR
0x0B7A	0xBF00    NOP
0x0B7C	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0B68	0x4901    LDR	R1, [PC, #4]
0x0B6A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x0B6C	0x4770    BX	LR
0x0B6E	0xBF00    NOP
0x0B70	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0B5C	0x4901    LDR	R1, [PC, #4]
0x0B5E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x0B60	0x4770    BX	LR
0x0B62	0xBF00    NOP
0x0B64	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0B98	0x4901    LDR	R1, [PC, #4]
0x0B9A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x0B9C	0x4770    BX	LR
0x0B9E	0xBF00    NOP
0x0BA0	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0B8C	0x4901    LDR	R1, [PC, #4]
0x0B8E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x0B90	0x4770    BX	LR
0x0B92	0xBF00    NOP
0x0B94	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0B80	0x4901    LDR	R1, [PC, #4]
0x0B82	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x0B84	0x4770    BX	LR
0x0B86	0xBF00    NOP
0x0B88	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0B2C	0x4901    LDR	R1, [PC, #4]
0x0B2E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x0B30	0x4770    BX	LR
0x0B32	0xBF00    NOP
0x0B34	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0B50	0x4901    LDR	R1, [PC, #4]
0x0B52	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x0B54	0x4770    BX	LR
0x0B56	0xBF00    NOP
0x0B58	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0B44	0x4901    LDR	R1, [PC, #4]
0x0B46	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x0B48	0x4770    BX	LR
0x0B4A	0xBF00    NOP
0x0B4C	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0B38	0x4901    LDR	R1, [PC, #4]
0x0B3A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x0B3C	0x4770    BX	LR
0x0B3E	0xBF00    NOP
0x0B40	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0BA4	0x4901    LDR	R1, [PC, #4]
0x0BA6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x0BA8	0x4770    BX	LR
0x0BAA	0xBF00    NOP
0x0BAC	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0C18	0x4901    LDR	R1, [PC, #4]
0x0C1A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x0C1C	0x4770    BX	LR
0x0C1E	0xBF00    NOP
0x0C20	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0C0C	0x4901    LDR	R1, [PC, #4]
0x0C0E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x0C10	0x4770    BX	LR
0x0C12	0xBF00    NOP
0x0C14	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0C6C	0x4901    LDR	R1, [PC, #4]
0x0C6E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x0C70	0x4770    BX	LR
0x0C72	0xBF00    NOP
0x0C74	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0C60	0x4901    LDR	R1, [PC, #4]
0x0C62	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x0C64	0x4770    BX	LR
0x0C66	0xBF00    NOP
0x0C68	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0BBC	0x4901    LDR	R1, [PC, #4]
0x0BBE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x0BC0	0x4770    BX	LR
0x0BC2	0xBF00    NOP
0x0BC4	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0BB0	0x4901    LDR	R1, [PC, #4]
0x0BB2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x0BB4	0x4770    BX	LR
0x0BB6	0xBF00    NOP
0x0BB8	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0C00	0x4901    LDR	R1, [PC, #4]
0x0C02	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x0C04	0x4770    BX	LR
0x0C06	0xBF00    NOP
0x0C08	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
__excelonlp_driver_hal_spiMap:
;__hal_stm32.c, 33 :: 		static void hal_spiMap(T_HAL_P spiObj)
; spiObj start address is: 0 (R0)
; spiObj end address is: 0 (R0)
; spiObj start address is: 0 (R0)
;__hal_stm32.c, 37 :: 		fp_spiWrite = tmp->spiWrite;
0x0BE8	0x6802    LDR	R2, [R0, #0]
0x0BEA	0x4903    LDR	R1, [PC, #12]
0x0BEC	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 38 :: 		fp_spiRead  = tmp->spiRead;
0x0BEE	0x1D01    ADDS	R1, R0, #4
; spiObj end address is: 0 (R0)
0x0BF0	0x680A    LDR	R2, [R1, #0]
0x0BF2	0x4902    LDR	R1, [PC, #8]
0x0BF4	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 39 :: 		}
L_end_hal_spiMap:
0x0BF6	0x4770    BX	LR
0x0BF8	0x00B82000  	__excelonlp_driver_fp_spiWrite+0
0x0BFC	0x00B02000  	__excelonlp_driver_fp_spiRead+0
; end of __excelonlp_driver_hal_spiMap
__excelonlp_driver_hal_gpioMap:
;__excelonlp_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__excelonlp_hal.c, 365 :: 		hal_gpio_csSet = tmp->gpioSet[ __CS_PIN_OUTPUT__ ];
0x0BC8	0xF2000108  ADDW	R1, R0, #8
0x0BCC	0x680A    LDR	R2, [R1, #0]
0x0BCE	0x4904    LDR	R1, [PC, #16]
0x0BD0	0x600A    STR	R2, [R1, #0]
;__excelonlp_hal.c, 380 :: 		hal_gpio_pwmSet = tmp->gpioSet[ __PWM_PIN_OUTPUT__ ];
0x0BD2	0xF2000118  ADDW	R1, R0, #24
; gpioObj end address is: 0 (R0)
0x0BD6	0x680A    LDR	R2, [R1, #0]
0x0BD8	0x4902    LDR	R1, [PC, #8]
0x0BDA	0x600A    STR	R2, [R1, #0]
;__excelonlp_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x0BDC	0x4770    BX	LR
0x0BDE	0xBF00    NOP
0x0BE0	0x00AC2000  	__excelonlp_driver_hal_gpio_csSet+0
0x0BE4	0x00B42000  	__excelonlp_driver_hal_gpio_pwmSet+0
; end of __excelonlp_driver_hal_gpioMap
_applicationTask:
;Click_ExcelonLP_STM.c, 58 :: 		void applicationTask()
0x15C0	0xB081    SUB	SP, SP, #4
0x15C2	0xF8CDE000  STR	LR, [SP, #0]
;Click_ExcelonLP_STM.c, 60 :: 		mikrobus_logWrite("Read Device ID : ", _LOG_TEXT);
0x15C6	0x4845    LDR	R0, [PC, #276]
0x15C8	0x2101    MOVS	R1, #1
0x15CA	0xF7FFFF47  BL	_mikrobus_logWrite+0
;Click_ExcelonLP_STM.c, 61 :: 		excelonlp_sendCommand(_EXCELONLP_OPCODE_SET_WRITE_ENABLE_LATCH);
0x15CE	0x2006    MOVS	R0, __EXCELONLP_OPCODE_SET_WRITE_ENABLE_LATCH
0x15D0	0xF7FFFECE  BL	_excelonlp_sendCommand+0
;Click_ExcelonLP_STM.c, 62 :: 		excelonlp_readData(_EXCELONLP_OPCODE_READ_DEVICE_ID, OUTBuf, 9);
0x15D4	0x2209    MOVS	R2, #9
0x15D6	0x4942    LDR	R1, [PC, #264]
0x15D8	0x209F    MOVS	R0, __EXCELONLP_OPCODE_READ_DEVICE_ID
0x15DA	0xF7FFFE43  BL	_excelonlp_readData+0
;Click_ExcelonLP_STM.c, 63 :: 		for(cnt = 0; cnt < 9; cnt++)
0x15DE	0x2100    MOVS	R1, #0
0x15E0	0x4840    LDR	R0, [PC, #256]
0x15E2	0x7001    STRB	R1, [R0, #0]
L_applicationTask2:
0x15E4	0x483F    LDR	R0, [PC, #252]
0x15E6	0x7800    LDRB	R0, [R0, #0]
0x15E8	0x2809    CMP	R0, #9
0x15EA	0xD216    BCS	L_applicationTask3
;Click_ExcelonLP_STM.c, 65 :: 		IntToHex(OUTBuf[cnt], demoText);
0x15EC	0x483D    LDR	R0, [PC, #244]
0x15EE	0x7801    LDRB	R1, [R0, #0]
0x15F0	0x483B    LDR	R0, [PC, #236]
0x15F2	0x1840    ADDS	R0, R0, R1
0x15F4	0x7800    LDRB	R0, [R0, #0]
0x15F6	0x493C    LDR	R1, [PC, #240]
0x15F8	0xF7FFFE80  BL	_IntToHex+0
;Click_ExcelonLP_STM.c, 66 :: 		mikrobus_logWrite(" 0x", _LOG_TEXT);
0x15FC	0x483B    LDR	R0, [PC, #236]
0x15FE	0x2101    MOVS	R1, #1
0x1600	0xF7FFFF2C  BL	_mikrobus_logWrite+0
;Click_ExcelonLP_STM.c, 67 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x1604	0x2101    MOVS	R1, #1
0x1606	0x4838    LDR	R0, [PC, #224]
0x1608	0xF7FFFF28  BL	_mikrobus_logWrite+0
;Click_ExcelonLP_STM.c, 68 :: 		Delay_100ms();
0x160C	0xF7FFFEA4  BL	_Delay_100ms+0
;Click_ExcelonLP_STM.c, 63 :: 		for(cnt = 0; cnt < 9; cnt++)
0x1610	0x4934    LDR	R1, [PC, #208]
0x1612	0x7808    LDRB	R0, [R1, #0]
0x1614	0x1C40    ADDS	R0, R0, #1
0x1616	0x7008    STRB	R0, [R1, #0]
;Click_ExcelonLP_STM.c, 69 :: 		}
0x1618	0xE7E4    B	L_applicationTask2
L_applicationTask3:
;Click_ExcelonLP_STM.c, 70 :: 		mikrobus_logWrite(" ", _LOG_LINE);
0x161A	0x4835    LDR	R0, [PC, #212]
0x161C	0x2102    MOVS	R1, #2
0x161E	0xF7FFFF1D  BL	_mikrobus_logWrite+0
;Click_ExcelonLP_STM.c, 72 :: 		mikrobus_logWrite("Write MikroE data.", _LOG_LINE);
0x1622	0x4834    LDR	R0, [PC, #208]
0x1624	0x2102    MOVS	R1, #2
0x1626	0xF7FFFF19  BL	_mikrobus_logWrite+0
;Click_ExcelonLP_STM.c, 73 :: 		excelonlp_sendCommand(_EXCELONLP_OPCODE_SET_WRITE_ENABLE_LATCH);
0x162A	0x2006    MOVS	R0, __EXCELONLP_OPCODE_SET_WRITE_ENABLE_LATCH
0x162C	0xF7FFFEA0  BL	_excelonlp_sendCommand+0
;Click_ExcelonLP_STM.c, 74 :: 		for(cnt = 0; cnt < 6; cnt++)
0x1630	0x2100    MOVS	R1, #0
0x1632	0x482C    LDR	R0, [PC, #176]
0x1634	0x7001    STRB	R1, [R0, #0]
L_applicationTask5:
0x1636	0x482B    LDR	R0, [PC, #172]
0x1638	0x7800    LDRB	R0, [R0, #0]
0x163A	0x2806    CMP	R0, #6
0x163C	0xD21A    BCS	L_applicationTask6
;Click_ExcelonLP_STM.c, 76 :: 		excelonlp_sendCommand(_EXCELONLP_OPCODE_SET_WRITE_ENABLE_LATCH);
0x163E	0x2006    MOVS	R0, __EXCELONLP_OPCODE_SET_WRITE_ENABLE_LATCH
0x1640	0xF7FFFE96  BL	_excelonlp_sendCommand+0
;Click_ExcelonLP_STM.c, 77 :: 		excelonlp_writeMemoryData(_EXCELONLP_OPCODE_WRITE_MEMORY_DATA, memoryAddress++, sendBuffer[cnt]);
0x1644	0x4827    LDR	R0, [PC, #156]
0x1646	0x7801    LDRB	R1, [R0, #0]
0x1648	0x482B    LDR	R0, [PC, #172]
0x164A	0x1840    ADDS	R0, R0, R1
0x164C	0x7800    LDRB	R0, [R0, #0]
0x164E	0xB2C1    UXTB	R1, R0
0x1650	0x482A    LDR	R0, [PC, #168]
0x1652	0x6800    LDR	R0, [R0, #0]
0x1654	0xB2CA    UXTB	R2, R1
0x1656	0x4601    MOV	R1, R0
0x1658	0x2002    MOVS	R0, __EXCELONLP_OPCODE_WRITE_MEMORY_DATA
0x165A	0xF7FFFE23  BL	_excelonlp_writeMemoryData+0
0x165E	0x4927    LDR	R1, [PC, #156]
0x1660	0x6808    LDR	R0, [R1, #0]
0x1662	0x1C40    ADDS	R0, R0, #1
0x1664	0x6008    STR	R0, [R1, #0]
;Click_ExcelonLP_STM.c, 78 :: 		Delay_100ms();
0x1666	0xF7FFFE77  BL	_Delay_100ms+0
;Click_ExcelonLP_STM.c, 74 :: 		for(cnt = 0; cnt < 6; cnt++)
0x166A	0x491E    LDR	R1, [PC, #120]
0x166C	0x7808    LDRB	R0, [R1, #0]
0x166E	0x1C40    ADDS	R0, R0, #1
0x1670	0x7008    STRB	R0, [R1, #0]
;Click_ExcelonLP_STM.c, 79 :: 		}
0x1672	0xE7E0    B	L_applicationTask5
L_applicationTask6:
;Click_ExcelonLP_STM.c, 80 :: 		memoryAddress = 0x00000055;
0x1674	0x2155    MOVS	R1, #85
0x1676	0x4821    LDR	R0, [PC, #132]
0x1678	0x6001    STR	R1, [R0, #0]
;Click_ExcelonLP_STM.c, 81 :: 		mikrobus_logWrite("Read memory data : ", _LOG_TEXT);
0x167A	0x4821    LDR	R0, [PC, #132]
0x167C	0x2101    MOVS	R1, #1
0x167E	0xF7FFFEED  BL	_mikrobus_logWrite+0
;Click_ExcelonLP_STM.c, 82 :: 		for(cnt = 0; cnt < 6; cnt++)
0x1682	0x2100    MOVS	R1, #0
0x1684	0x4817    LDR	R0, [PC, #92]
0x1686	0x7001    STRB	R1, [R0, #0]
L_applicationTask8:
0x1688	0x4816    LDR	R0, [PC, #88]
0x168A	0x7800    LDRB	R0, [R0, #0]
0x168C	0x2806    CMP	R0, #6
0x168E	0xD216    BCS	L_applicationTask9
;Click_ExcelonLP_STM.c, 84 :: 		MemoryData = excelonlp_readMemoryData(_EXCELONLP_OPCODE_READ_MEMORY_DATA, memoryAddress++);
0x1690	0x481A    LDR	R0, [PC, #104]
0x1692	0x6800    LDR	R0, [R0, #0]
0x1694	0x4601    MOV	R1, R0
0x1696	0x2003    MOVS	R0, __EXCELONLP_OPCODE_READ_MEMORY_DATA
0x1698	0xF7FFFDB2  BL	_excelonlp_readMemoryData+0
0x169C	0x4919    LDR	R1, [PC, #100]
0x169E	0x7008    STRB	R0, [R1, #0]
0x16A0	0x4916    LDR	R1, [PC, #88]
0x16A2	0x6808    LDR	R0, [R1, #0]
0x16A4	0x1C40    ADDS	R0, R0, #1
0x16A6	0x6008    STR	R0, [R1, #0]
;Click_ExcelonLP_STM.c, 85 :: 		mikrobus_logWrite(&MemoryData, _LOG_TEXT);
0x16A8	0x2101    MOVS	R1, #1
0x16AA	0x4816    LDR	R0, [PC, #88]
0x16AC	0xF7FFFED6  BL	_mikrobus_logWrite+0
;Click_ExcelonLP_STM.c, 86 :: 		Delay_100ms();
0x16B0	0xF7FFFE52  BL	_Delay_100ms+0
;Click_ExcelonLP_STM.c, 82 :: 		for(cnt = 0; cnt < 6; cnt++)
0x16B4	0x490B    LDR	R1, [PC, #44]
0x16B6	0x7808    LDRB	R0, [R1, #0]
0x16B8	0x1C40    ADDS	R0, R0, #1
0x16BA	0x7008    STRB	R0, [R1, #0]
;Click_ExcelonLP_STM.c, 87 :: 		}
0x16BC	0xE7E4    B	L_applicationTask8
L_applicationTask9:
;Click_ExcelonLP_STM.c, 88 :: 		Delay_ms( 5000 );
0x16BE	0xF24867FF  MOVW	R7, #34559
0x16C2	0xF2C03793  MOVT	R7, #915
0x16C6	0xBF00    NOP
0x16C8	0xBF00    NOP
L_applicationTask11:
0x16CA	0x1E7F    SUBS	R7, R7, #1
0x16CC	0xD1FD    BNE	L_applicationTask11
0x16CE	0xBF00    NOP
0x16D0	0xBF00    NOP
0x16D2	0xBF00    NOP
;Click_ExcelonLP_STM.c, 89 :: 		}
L_end_applicationTask:
0x16D4	0xF8DDE000  LDR	LR, [SP, #0]
0x16D8	0xB001    ADD	SP, SP, #4
0x16DA	0x4770    BX	LR
0x16DC	0x00142000  	?lstr2_Click_ExcelonLP_STM+0
0x16E0	0x00262000  	_OUTBuf+0
0x16E4	0x00852000  	_cnt+0
0x16E8	0x003A2000  	_demoText+0
0x16EC	0x006C2000  	?lstr3_Click_ExcelonLP_STM+0
0x16F0	0x00702000  	?lstr4_Click_ExcelonLP_STM+0
0x16F4	0x00722000  	?lstr5_Click_ExcelonLP_STM+0
0x16F8	0x008C2000  	_sendBuffer+0
0x16FC	0x00882000  	_memoryAddress+0
0x1700	0x00932000  	?lstr6_Click_ExcelonLP_STM+0
0x1704	0x00862000  	_MemoryData+0
; end of _applicationTask
_excelonlp_sendCommand:
;__excelonlp_driver.c, 88 :: 		void excelonlp_sendCommand(uint8_t opcode)
; opcode start address is: 0 (R0)
0x1370	0xB082    SUB	SP, SP, #8
0x1372	0xF8CDE000  STR	LR, [SP, #0]
; opcode end address is: 0 (R0)
; opcode start address is: 0 (R0)
;__excelonlp_driver.c, 92 :: 		writeReg[0] = opcode;
0x1376	0xA901    ADD	R1, SP, #4
0x1378	0x7008    STRB	R0, [R1, #0]
; opcode end address is: 0 (R0)
;__excelonlp_driver.c, 94 :: 		hal_gpio_csSet(0);
0x137A	0x2000    MOVS	R0, #0
0x137C	0x4C07    LDR	R4, [PC, #28]
0x137E	0x6824    LDR	R4, [R4, #0]
0x1380	0x47A0    BLX	R4
;__excelonlp_driver.c, 95 :: 		hal_spiWrite(writeReg,1);
0x1382	0xA901    ADD	R1, SP, #4
0x1384	0x4608    MOV	R0, R1
0x1386	0x2101    MOVS	R1, #1
0x1388	0xF7FFFC4C  BL	__excelonlp_driver_hal_spiWrite+0
;__excelonlp_driver.c, 96 :: 		hal_gpio_csSet(1);
0x138C	0x2001    MOVS	R0, #1
0x138E	0x4C03    LDR	R4, [PC, #12]
0x1390	0x6824    LDR	R4, [R4, #0]
0x1392	0x47A0    BLX	R4
;__excelonlp_driver.c, 97 :: 		}
L_end_excelonlp_sendCommand:
0x1394	0xF8DDE000  LDR	LR, [SP, #0]
0x1398	0xB002    ADD	SP, SP, #8
0x139A	0x4770    BX	LR
0x139C	0x00AC2000  	__excelonlp_driver_hal_gpio_csSet+0
; end of _excelonlp_sendCommand
__excelonlp_driver_hal_spiWrite:
;__hal_stm32.c, 41 :: 		static void hal_spiWrite(uint8_t *pBuf, uint16_t nBytes)
; nBytes start address is: 4 (R1)
; pBuf start address is: 0 (R0)
0x0C24	0xB083    SUB	SP, SP, #12
0x0C26	0xF8CDE000  STR	LR, [SP, #0]
0x0C2A	0xB28A    UXTH	R2, R1
; nBytes end address is: 4 (R1)
; pBuf end address is: 0 (R0)
; pBuf start address is: 0 (R0)
; nBytes start address is: 8 (R2)
;__hal_stm32.c, 43 :: 		uint8_t *ptr = pBuf;
; ptr start address is: 4 (R1)
0x0C2C	0x4601    MOV	R1, R0
; pBuf end address is: 0 (R0)
; nBytes end address is: 8 (R2)
; ptr end address is: 4 (R1)
0x0C2E	0xB290    UXTH	R0, R2
;__hal_stm32.c, 44 :: 		while( nBytes-- )
L___excelonlp_driver_hal_spiWrite0:
; ptr start address is: 4 (R1)
; nBytes start address is: 0 (R0)
; nBytes start address is: 0 (R0)
0x0C30	0xB283    UXTH	R3, R0
0x0C32	0x1E42    SUBS	R2, R0, #1
0x0C34	0xB290    UXTH	R0, R2
; nBytes end address is: 0 (R0)
0x0C36	0xB16B    CBZ	R3, L___excelonlp_driver_hal_spiWrite1
; nBytes end address is: 0 (R0)
;__hal_stm32.c, 45 :: 		fp_spiWrite( *( ptr++ ) );
; nBytes start address is: 0 (R0)
0x0C38	0x780A    LDRB	R2, [R1, #0]
0x0C3A	0xB2D4    UXTB	R4, R2
0x0C3C	0xF8AD0004  STRH	R0, [SP, #4]
0x0C40	0x9102    STR	R1, [SP, #8]
0x0C42	0xB2A0    UXTH	R0, R4
0x0C44	0x4C05    LDR	R4, [PC, #20]
0x0C46	0x6824    LDR	R4, [R4, #0]
0x0C48	0x47A0    BLX	R4
0x0C4A	0x9902    LDR	R1, [SP, #8]
0x0C4C	0xF8BD0004  LDRH	R0, [SP, #4]
0x0C50	0x1C49    ADDS	R1, R1, #1
; nBytes end address is: 0 (R0)
; ptr end address is: 4 (R1)
0x0C52	0xE7ED    B	L___excelonlp_driver_hal_spiWrite0
L___excelonlp_driver_hal_spiWrite1:
;__hal_stm32.c, 46 :: 		}
L_end_hal_spiWrite:
0x0C54	0xF8DDE000  LDR	LR, [SP, #0]
0x0C58	0xB003    ADD	SP, SP, #12
0x0C5A	0x4770    BX	LR
0x0C5C	0x00B82000  	__excelonlp_driver_fp_spiWrite+0
; end of __excelonlp_driver_hal_spiWrite
_excelonlp_readData:
;__excelonlp_driver.c, 99 :: 		void excelonlp_readData(uint8_t opcode, uint8_t *OUTBuf, uint8_t nData)
0x1264	0xB084    SUB	SP, SP, #16
0x1266	0xF8CDE000  STR	LR, [SP, #0]
0x126A	0xF88D0004  STRB	R0, [SP, #4]
0x126E	0x9102    STR	R1, [SP, #8]
0x1270	0xF88D200C  STRB	R2, [SP, #12]
;__excelonlp_driver.c, 101 :: 		hal_gpio_csSet(0);
0x1274	0x2000    MOVS	R0, #0
0x1276	0x4C0A    LDR	R4, [PC, #40]
0x1278	0x6824    LDR	R4, [R4, #0]
0x127A	0x47A0    BLX	R4
;__excelonlp_driver.c, 102 :: 		hal_spiWrite(&opcode,1);
0x127C	0xAB01    ADD	R3, SP, #4
0x127E	0x2101    MOVS	R1, #1
0x1280	0x4618    MOV	R0, R3
0x1282	0xF7FFFCCF  BL	__excelonlp_driver_hal_spiWrite+0
;__excelonlp_driver.c, 103 :: 		hal_spiRead(OUTBuf, nData);
0x1286	0xF89D100C  LDRB	R1, [SP, #12]
0x128A	0x9802    LDR	R0, [SP, #8]
0x128C	0xF7FFFF52  BL	__excelonlp_driver_hal_spiRead+0
;__excelonlp_driver.c, 104 :: 		hal_gpio_csSet(1);
0x1290	0x2001    MOVS	R0, #1
0x1292	0x4C03    LDR	R4, [PC, #12]
0x1294	0x6824    LDR	R4, [R4, #0]
0x1296	0x47A0    BLX	R4
;__excelonlp_driver.c, 105 :: 		}
L_end_excelonlp_readData:
0x1298	0xF8DDE000  LDR	LR, [SP, #0]
0x129C	0xB004    ADD	SP, SP, #16
0x129E	0x4770    BX	LR
0x12A0	0x00AC2000  	__excelonlp_driver_hal_gpio_csSet+0
; end of _excelonlp_readData
__excelonlp_driver_hal_spiRead:
;__hal_stm32.c, 48 :: 		static void hal_spiRead(uint8_t *pBuf, uint16_t nBytes)
; pBuf start address is: 0 (R0)
0x1134	0xB083    SUB	SP, SP, #12
0x1136	0xF8CDE000  STR	LR, [SP, #0]
0x113A	0xF8AD1008  STRH	R1, [SP, #8]
; pBuf end address is: 0 (R0)
; pBuf start address is: 0 (R0)
;__hal_stm32.c, 50 :: 		uint8_t *ptr = pBuf;
0x113E	0x9001    STR	R0, [SP, #4]
; pBuf end address is: 0 (R0)
;__hal_stm32.c, 51 :: 		while( nBytes-- )
L___excelonlp_driver_hal_spiRead2:
0x1140	0xF8BD3008  LDRH	R3, [SP, #8]
0x1144	0xF8BD2008  LDRH	R2, [SP, #8]
0x1148	0x1E52    SUBS	R2, R2, #1
0x114A	0xF8AD2008  STRH	R2, [SP, #8]
0x114E	0xB14B    CBZ	R3, L___excelonlp_driver_hal_spiRead3
;__hal_stm32.c, 52 :: 		*( ptr++ ) = fp_spiRead( 0x00 );
0x1150	0x2000    MOVS	R0, #0
0x1152	0x4C06    LDR	R4, [PC, #24]
0x1154	0x6824    LDR	R4, [R4, #0]
0x1156	0x47A0    BLX	R4
0x1158	0x9A01    LDR	R2, [SP, #4]
0x115A	0x7010    STRB	R0, [R2, #0]
0x115C	0x9A01    LDR	R2, [SP, #4]
0x115E	0x1C52    ADDS	R2, R2, #1
0x1160	0x9201    STR	R2, [SP, #4]
0x1162	0xE7ED    B	L___excelonlp_driver_hal_spiRead2
L___excelonlp_driver_hal_spiRead3:
;__hal_stm32.c, 53 :: 		}
L_end_hal_spiRead:
0x1164	0xF8DDE000  LDR	LR, [SP, #0]
0x1168	0xB003    ADD	SP, SP, #12
0x116A	0x4770    BX	LR
0x116C	0x00B02000  	__excelonlp_driver_fp_spiRead+0
; end of __excelonlp_driver_hal_spiRead
_SPI1_Read:
;__Lib_SPI_123.c, 74 :: 		
; data_out start address is: 0 (R0)
0x0A28	0xB081    SUB	SP, SP, #4
0x0A2A	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 75 :: 		
0x0A2E	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0A30	0x4803    LDR	R0, [PC, #12]
0x0A32	0xF7FFFC79  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 76 :: 		
L_end_SPI1_Read:
0x0A36	0xF8DDE000  LDR	LR, [SP, #0]
0x0A3A	0xB001    ADD	SP, SP, #4
0x0A3C	0x4770    BX	LR
0x0A3E	0xBF00    NOP
0x0A40	0x30004001  	SPI1_CR1+0
; end of _SPI1_Read
_SPI2_Read:
;__Lib_SPI_123.c, 99 :: 		
; data_out start address is: 0 (R0)
0x0B10	0xB081    SUB	SP, SP, #4
0x0B12	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 100 :: 		
0x0B16	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0B18	0x4803    LDR	R0, [PC, #12]
0x0B1A	0xF7FFFC05  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 101 :: 		
L_end_SPI2_Read:
0x0B1E	0xF8DDE000  LDR	LR, [SP, #0]
0x0B22	0xB001    ADD	SP, SP, #4
0x0B24	0x4770    BX	LR
0x0B26	0xBF00    NOP
0x0B28	0x38004000  	SPI2_CR1+0
; end of _SPI2_Read
_SPI3_Read:
;__Lib_SPI_123.c, 125 :: 		
; data_out start address is: 0 (R0)
0x0A44	0xB081    SUB	SP, SP, #4
0x0A46	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 126 :: 		
0x0A4A	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0A4C	0x4803    LDR	R0, [PC, #12]
0x0A4E	0xF7FFFC6B  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 127 :: 		
L_end_SPI3_Read:
0x0A52	0xF8DDE000  LDR	LR, [SP, #0]
0x0A56	0xB001    ADD	SP, SP, #4
0x0A58	0x4770    BX	LR
0x0A5A	0xBF00    NOP
0x0A5C	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Read
_IntToHex:
;__Lib_Conversions.c, 25 :: 		
; output start address is: 4 (R1)
0x12FC	0xB082    SUB	SP, SP, #8
0x12FE	0xF8AD0004  STRH	R0, [SP, #4]
; output end address is: 4 (R1)
; output start address is: 4 (R1)
;__Lib_Conversions.c, 26 :: 		
0x1302	0xAD01    ADD	R5, SP, #4
0x1304	0x1C6A    ADDS	R2, R5, #1
0x1306	0x7812    LDRB	R2, [R2, #0]
0x1308	0x0913    LSRS	R3, R2, #4
0x130A	0xB2DB    UXTB	R3, R3
0x130C	0x4A11    LDR	R2, [PC, #68]
0x130E	0x18D2    ADDS	R2, R2, R3
0x1310	0x7812    LDRB	R2, [R2, #0]
0x1312	0x700A    STRB	R2, [R1, #0]
;__Lib_Conversions.c, 27 :: 		
0x1314	0x1C4C    ADDS	R4, R1, #1
0x1316	0x1C6A    ADDS	R2, R5, #1
0x1318	0x7812    LDRB	R2, [R2, #0]
0x131A	0xF002030F  AND	R3, R2, #15
0x131E	0xB2DB    UXTB	R3, R3
0x1320	0x4A0C    LDR	R2, [PC, #48]
0x1322	0x18D2    ADDS	R2, R2, R3
0x1324	0x7812    LDRB	R2, [R2, #0]
0x1326	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 28 :: 		
0x1328	0x1C8C    ADDS	R4, R1, #2
0x132A	0x782A    LDRB	R2, [R5, #0]
0x132C	0x0913    LSRS	R3, R2, #4
0x132E	0xB2DB    UXTB	R3, R3
0x1330	0x4A08    LDR	R2, [PC, #32]
0x1332	0x18D2    ADDS	R2, R2, R3
0x1334	0x7812    LDRB	R2, [R2, #0]
0x1336	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 29 :: 		
0x1338	0x1CCC    ADDS	R4, R1, #3
0x133A	0x782A    LDRB	R2, [R5, #0]
0x133C	0xF002030F  AND	R3, R2, #15
0x1340	0xB2DB    UXTB	R3, R3
0x1342	0x4A04    LDR	R2, [PC, #16]
0x1344	0x18D2    ADDS	R2, R2, R3
0x1346	0x7812    LDRB	R2, [R2, #0]
0x1348	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 30 :: 		
0x134A	0x1D0B    ADDS	R3, R1, #4
; output end address is: 4 (R1)
0x134C	0x2200    MOVS	R2, #0
0x134E	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 31 :: 		
L_end_IntToHex:
0x1350	0xB002    ADD	SP, SP, #8
0x1352	0x4770    BX	LR
0x1354	0x1BCB0000  	__Lib_Conversions_Digits+0
; end of _IntToHex
_Delay_100ms:
;__Lib_Delays.c, 53 :: 		void Delay_100ms() {
;__Lib_Delays.c, 54 :: 		Delay_ms(100);
0x1358	0xF644777F  MOVW	R7, #20351
0x135C	0xF2C00712  MOVT	R7, #18
L_Delay_100ms20:
0x1360	0x1E7F    SUBS	R7, R7, #1
0x1362	0xD1FD    BNE	L_Delay_100ms20
0x1364	0xBF00    NOP
0x1366	0xBF00    NOP
0x1368	0xBF00    NOP
0x136A	0xBF00    NOP
0x136C	0xBF00    NOP
;__Lib_Delays.c, 55 :: 		}
L_end_Delay_100ms:
0x136E	0x4770    BX	LR
; end of _Delay_100ms
_excelonlp_writeMemoryData:
;__excelonlp_driver.c, 107 :: 		void excelonlp_writeMemoryData(uint8_t opcode, uint32_t addr, uint8_t _data)
; _data start address is: 8 (R2)
; addr start address is: 4 (R1)
; opcode start address is: 0 (R0)
0x12A4	0xB083    SUB	SP, SP, #12
0x12A6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 8 (R2)
; addr end address is: 4 (R1)
; opcode end address is: 0 (R0)
; opcode start address is: 0 (R0)
; addr start address is: 4 (R1)
; _data start address is: 8 (R2)
;__excelonlp_driver.c, 111 :: 		writeReg[ 0 ] = opcode;
0x12AA	0xAD01    ADD	R5, SP, #4
0x12AC	0x7028    STRB	R0, [R5, #0]
; opcode end address is: 0 (R0)
;__excelonlp_driver.c, 112 :: 		writeReg[ 1 ] = (uint8_t)((addr >> 16) & 0x000000FF);
0x12AE	0x1C6C    ADDS	R4, R5, #1
0x12B0	0x0C0B    LSRS	R3, R1, #16
0x12B2	0xF00303FF  AND	R3, R3, #255
0x12B6	0xB2DB    UXTB	R3, R3
0x12B8	0x7023    STRB	R3, [R4, #0]
;__excelonlp_driver.c, 113 :: 		writeReg[ 2 ] = (uint8_t)((addr >> 8) & 0x000000FF);
0x12BA	0x1CAC    ADDS	R4, R5, #2
0x12BC	0x0A0B    LSRS	R3, R1, #8
0x12BE	0xF00303FF  AND	R3, R3, #255
0x12C2	0xB2DB    UXTB	R3, R3
0x12C4	0x7023    STRB	R3, [R4, #0]
;__excelonlp_driver.c, 114 :: 		writeReg[ 3 ] = (uint8_t)(addr & 0x000000FF);
0x12C6	0x1CEC    ADDS	R4, R5, #3
0x12C8	0xF00103FF  AND	R3, R1, #255
; addr end address is: 4 (R1)
0x12CC	0xB2DB    UXTB	R3, R3
0x12CE	0x7023    STRB	R3, [R4, #0]
;__excelonlp_driver.c, 115 :: 		writeReg[ 4 ] = _data;
0x12D0	0x1D2B    ADDS	R3, R5, #4
0x12D2	0x701A    STRB	R2, [R3, #0]
; _data end address is: 8 (R2)
;__excelonlp_driver.c, 117 :: 		hal_gpio_csSet(0);
0x12D4	0x2000    MOVS	R0, #0
0x12D6	0x4C08    LDR	R4, [PC, #32]
0x12D8	0x6824    LDR	R4, [R4, #0]
0x12DA	0x47A0    BLX	R4
;__excelonlp_driver.c, 118 :: 		hal_spiWrite(writeReg, 5);
0x12DC	0xAB01    ADD	R3, SP, #4
0x12DE	0x2105    MOVS	R1, #5
0x12E0	0x4618    MOV	R0, R3
0x12E2	0xF7FFFC9F  BL	__excelonlp_driver_hal_spiWrite+0
;__excelonlp_driver.c, 119 :: 		hal_gpio_csSet(1);
0x12E6	0x2001    MOVS	R0, #1
0x12E8	0x4C03    LDR	R4, [PC, #12]
0x12EA	0x6824    LDR	R4, [R4, #0]
0x12EC	0x47A0    BLX	R4
;__excelonlp_driver.c, 120 :: 		}
L_end_excelonlp_writeMemoryData:
0x12EE	0xF8DDE000  LDR	LR, [SP, #0]
0x12F2	0xB003    ADD	SP, SP, #12
0x12F4	0x4770    BX	LR
0x12F6	0xBF00    NOP
0x12F8	0x00AC2000  	__excelonlp_driver_hal_gpio_csSet+0
; end of _excelonlp_writeMemoryData
_excelonlp_readMemoryData:
;__excelonlp_driver.c, 122 :: 		uint8_t excelonlp_readMemoryData(uint8_t opcode, uint32_t addr)
; addr start address is: 4 (R1)
; opcode start address is: 0 (R0)
0x1200	0xB084    SUB	SP, SP, #16
0x1202	0xF8CDE000  STR	LR, [SP, #0]
; addr end address is: 4 (R1)
; opcode end address is: 0 (R0)
; opcode start address is: 0 (R0)
; addr start address is: 4 (R1)
;__excelonlp_driver.c, 127 :: 		writeReg[ 0 ] = opcode;
0x1206	0xAC01    ADD	R4, SP, #4
0x1208	0x7020    STRB	R0, [R4, #0]
; opcode end address is: 0 (R0)
;__excelonlp_driver.c, 128 :: 		writeReg[ 1 ] = (uint8_t)((addr >> 16) & 0x000000FF);
0x120A	0x1C63    ADDS	R3, R4, #1
0x120C	0x0C0A    LSRS	R2, R1, #16
0x120E	0xF00202FF  AND	R2, R2, #255
0x1212	0xB2D2    UXTB	R2, R2
0x1214	0x701A    STRB	R2, [R3, #0]
;__excelonlp_driver.c, 129 :: 		writeReg[ 2 ] = (uint8_t)((addr >> 8) & 0x000000FF);
0x1216	0x1CA3    ADDS	R3, R4, #2
0x1218	0x0A0A    LSRS	R2, R1, #8
0x121A	0xF00202FF  AND	R2, R2, #255
0x121E	0xB2D2    UXTB	R2, R2
0x1220	0x701A    STRB	R2, [R3, #0]
;__excelonlp_driver.c, 130 :: 		writeReg[ 3 ] = (uint8_t)(addr & 0x000000FF);
0x1222	0x1CE3    ADDS	R3, R4, #3
0x1224	0xF00102FF  AND	R2, R1, #255
; addr end address is: 4 (R1)
0x1228	0xB2D2    UXTB	R2, R2
0x122A	0x701A    STRB	R2, [R3, #0]
;__excelonlp_driver.c, 132 :: 		hal_gpio_csSet(0);
0x122C	0x2000    MOVS	R0, #0
0x122E	0x4C0C    LDR	R4, [PC, #48]
0x1230	0x6824    LDR	R4, [R4, #0]
0x1232	0x47A0    BLX	R4
;__excelonlp_driver.c, 133 :: 		hal_spiTransfer(writeReg,readReg, 5);
0x1234	0xF10D0309  ADD	R3, SP, #9
0x1238	0xAA01    ADD	R2, SP, #4
0x123A	0x4619    MOV	R1, R3
0x123C	0x4610    MOV	R0, R2
0x123E	0x2205    MOVS	R2, #5
0x1240	0xF7FFFF96  BL	__excelonlp_driver_hal_spiTransfer+0
;__excelonlp_driver.c, 134 :: 		hal_gpio_csSet(1);
0x1244	0x2001    MOVS	R0, #1
0x1246	0x4C06    LDR	R4, [PC, #24]
0x1248	0x6824    LDR	R4, [R4, #0]
0x124A	0x47A0    BLX	R4
;__excelonlp_driver.c, 136 :: 		return readReg[4];
0x124C	0xF10D0209  ADD	R2, SP, #9
0x1250	0x1D12    ADDS	R2, R2, #4
0x1252	0x7812    LDRB	R2, [R2, #0]
0x1254	0xB2D0    UXTB	R0, R2
;__excelonlp_driver.c, 137 :: 		}
L_end_excelonlp_readMemoryData:
0x1256	0xF8DDE000  LDR	LR, [SP, #0]
0x125A	0xB004    ADD	SP, SP, #16
0x125C	0x4770    BX	LR
0x125E	0xBF00    NOP
0x1260	0x00AC2000  	__excelonlp_driver_hal_gpio_csSet+0
; end of _excelonlp_readMemoryData
__excelonlp_driver_hal_spiTransfer:
;__hal_stm32.c, 55 :: 		static void hal_spiTransfer(uint8_t *pIn, uint8_t *pOut, uint16_t nBytes)
; pOut start address is: 4 (R1)
; pIn start address is: 0 (R0)
0x1170	0xB084    SUB	SP, SP, #16
0x1172	0xF8CDE000  STR	LR, [SP, #0]
0x1176	0xF8AD200C  STRH	R2, [SP, #12]
; pOut end address is: 4 (R1)
; pIn end address is: 0 (R0)
; pIn start address is: 0 (R0)
; pOut start address is: 4 (R1)
;__hal_stm32.c, 57 :: 		uint8_t *in = pIn;
0x117A	0x9001    STR	R0, [SP, #4]
; pIn end address is: 0 (R0)
;__hal_stm32.c, 58 :: 		uint8_t *out = pOut;
0x117C	0x9102    STR	R1, [SP, #8]
; pOut end address is: 4 (R1)
;__hal_stm32.c, 59 :: 		while( nBytes-- )
L___excelonlp_driver_hal_spiTransfer4:
0x117E	0xF8BD400C  LDRH	R4, [SP, #12]
0x1182	0xF8BD300C  LDRH	R3, [SP, #12]
0x1186	0x1E5B    SUBS	R3, R3, #1
0x1188	0xF8AD300C  STRH	R3, [SP, #12]
0x118C	0xB17C    CBZ	R4, L___excelonlp_driver_hal_spiTransfer5
;__hal_stm32.c, 60 :: 		*( out++ ) = fp_spiRead( *( in++ ) );
0x118E	0x9B01    LDR	R3, [SP, #4]
0x1190	0x781B    LDRB	R3, [R3, #0]
0x1192	0xB2DC    UXTB	R4, R3
0x1194	0xB2A0    UXTH	R0, R4
0x1196	0x4C08    LDR	R4, [PC, #32]
0x1198	0x6824    LDR	R4, [R4, #0]
0x119A	0x47A0    BLX	R4
0x119C	0x9B02    LDR	R3, [SP, #8]
0x119E	0x7018    STRB	R0, [R3, #0]
0x11A0	0x9B02    LDR	R3, [SP, #8]
0x11A2	0x1C5B    ADDS	R3, R3, #1
0x11A4	0x9302    STR	R3, [SP, #8]
0x11A6	0x9B01    LDR	R3, [SP, #4]
0x11A8	0x1C5B    ADDS	R3, R3, #1
0x11AA	0x9301    STR	R3, [SP, #4]
0x11AC	0xE7E7    B	L___excelonlp_driver_hal_spiTransfer4
L___excelonlp_driver_hal_spiTransfer5:
;__hal_stm32.c, 61 :: 		}
L_end_hal_spiTransfer:
0x11AE	0xF8DDE000  LDR	LR, [SP, #0]
0x11B2	0xB004    ADD	SP, SP, #16
0x11B4	0x4770    BX	LR
0x11B6	0xBF00    NOP
0x11B8	0x00B02000  	__excelonlp_driver_fp_spiRead+0
; end of __excelonlp_driver_hal_spiTransfer
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x17C0	0xB081    SUB	SP, SP, #4
0x17C2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x17C6	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x17C8	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x17CA	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17CC	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x17CE	0xF64B3080  MOVW	R0, #48000
0x17D2	0x4281    CMP	R1, R0
0x17D4	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x17D6	0x4846    LDR	R0, [PC, #280]
0x17D8	0x6800    LDR	R0, [R0, #0]
0x17DA	0xF0400102  ORR	R1, R0, #2
0x17DE	0x4844    LDR	R0, [PC, #272]
0x17E0	0x6001    STR	R1, [R0, #0]
0x17E2	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17E4	0xF64550C0  MOVW	R0, #24000
0x17E8	0x4281    CMP	R1, R0
0x17EA	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x17EC	0x4840    LDR	R0, [PC, #256]
0x17EE	0x6800    LDR	R0, [R0, #0]
0x17F0	0xF0400101  ORR	R1, R0, #1
0x17F4	0x483E    LDR	R0, [PC, #248]
0x17F6	0x6001    STR	R1, [R0, #0]
0x17F8	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x17FA	0x483D    LDR	R0, [PC, #244]
0x17FC	0x6801    LDR	R1, [R0, #0]
0x17FE	0xF06F0007  MVN	R0, #7
0x1802	0x4001    ANDS	R1, R0
0x1804	0x483A    LDR	R0, [PC, #232]
0x1806	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x1808	0xF7FFFE98  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x180C	0x4839    LDR	R0, [PC, #228]
0x180E	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x1810	0x4839    LDR	R0, [PC, #228]
0x1812	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x1814	0x4839    LDR	R0, [PC, #228]
0x1816	0xEA020100  AND	R1, R2, R0, LSL #0
0x181A	0x4839    LDR	R0, [PC, #228]
0x181C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x181E	0xF0020001  AND	R0, R2, #1
0x1822	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1824	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1826	0x4836    LDR	R0, [PC, #216]
0x1828	0x6800    LDR	R0, [R0, #0]
0x182A	0xF0000002  AND	R0, R0, #2
0x182E	0x2800    CMP	R0, #0
0x1830	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x1832	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x1834	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x1836	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1838	0xF4023080  AND	R0, R2, #65536
0x183C	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x183E	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x1840	0x482F    LDR	R0, [PC, #188]
0x1842	0x6800    LDR	R0, [R0, #0]
0x1844	0xF4003000  AND	R0, R0, #131072
0x1848	0x2800    CMP	R0, #0
0x184A	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x184C	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x184E	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x1850	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x1852	0xF0025080  AND	R0, R2, #268435456
0x1856	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x1858	0x4829    LDR	R0, [PC, #164]
0x185A	0x6800    LDR	R0, [R0, #0]
0x185C	0xF0405180  ORR	R1, R0, #268435456
0x1860	0x4827    LDR	R0, [PC, #156]
0x1862	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x1864	0x4826    LDR	R0, [PC, #152]
0x1866	0x6800    LDR	R0, [R0, #0]
0x1868	0xF0005000  AND	R0, R0, #536870912
0x186C	0x2800    CMP	R0, #0
0x186E	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x1870	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x1872	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x1874	0xF0026080  AND	R0, R2, #67108864
0x1878	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x187A	0x4821    LDR	R0, [PC, #132]
0x187C	0x6800    LDR	R0, [R0, #0]
0x187E	0xF0406180  ORR	R1, R0, #67108864
0x1882	0x481F    LDR	R0, [PC, #124]
0x1884	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1886	0x4611    MOV	R1, R2
0x1888	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x188A	0x481D    LDR	R0, [PC, #116]
0x188C	0x6800    LDR	R0, [R0, #0]
0x188E	0xF0006000  AND	R0, R0, #134217728
0x1892	0x2800    CMP	R0, #0
0x1894	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x1896	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1898	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x189A	0x4611    MOV	R1, R2
0x189C	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x189E	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x18A2	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x18A4	0x4816    LDR	R0, [PC, #88]
0x18A6	0x6800    LDR	R0, [R0, #0]
0x18A8	0xF0407180  ORR	R1, R0, #16777216
0x18AC	0x4814    LDR	R0, [PC, #80]
0x18AE	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x18B0	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x18B2	0x4813    LDR	R0, [PC, #76]
0x18B4	0x6800    LDR	R0, [R0, #0]
0x18B6	0xF0007000  AND	R0, R0, #33554432
0x18BA	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x18BC	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x18BE	0x460A    MOV	R2, R1
0x18C0	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x18C2	0x480C    LDR	R0, [PC, #48]
0x18C4	0x6800    LDR	R0, [R0, #0]
0x18C6	0xF000010C  AND	R1, R0, #12
0x18CA	0x0090    LSLS	R0, R2, #2
0x18CC	0xF000000C  AND	R0, R0, #12
0x18D0	0x4281    CMP	R1, R0
0x18D2	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x18D4	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x18D6	0xF8DDE000  LDR	LR, [SP, #0]
0x18DA	0xB001    ADD	SP, SP, #4
0x18DC	0x4770    BX	LR
0x18DE	0xBF00    NOP
0x18E0	0x00810501  	#83951745
0x18E4	0x8402001D  	#1934338
0x18E8	0x06440001  	#67140
0x18EC	0x19400001  	#72000
0x18F0	0x20004002  	FLASH_ACR+0
0x18F4	0x10044002  	RCC_CFGR+0
0x18F8	0x102C4002  	RCC_CFGR2+0
0x18FC	0xFFFF000F  	#1048575
0x1900	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x153C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x153E	0x4815    LDR	R0, [PC, #84]
0x1540	0x6800    LDR	R0, [R0, #0]
0x1542	0xF0400101  ORR	R1, R0, #1
0x1546	0x4813    LDR	R0, [PC, #76]
0x1548	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x154A	0x4913    LDR	R1, [PC, #76]
0x154C	0x4813    LDR	R0, [PC, #76]
0x154E	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x1550	0x4810    LDR	R0, [PC, #64]
0x1552	0x6801    LDR	R1, [R0, #0]
0x1554	0x4812    LDR	R0, [PC, #72]
0x1556	0x4001    ANDS	R1, R0
0x1558	0x480E    LDR	R0, [PC, #56]
0x155A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x155C	0x480D    LDR	R0, [PC, #52]
0x155E	0x6801    LDR	R1, [R0, #0]
0x1560	0xF46F2080  MVN	R0, #262144
0x1564	0x4001    ANDS	R1, R0
0x1566	0x480B    LDR	R0, [PC, #44]
0x1568	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x156A	0x480C    LDR	R0, [PC, #48]
0x156C	0x6801    LDR	R1, [R0, #0]
0x156E	0xF46F00FE  MVN	R0, #8323072
0x1572	0x4001    ANDS	R1, R0
0x1574	0x4809    LDR	R0, [PC, #36]
0x1576	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x1578	0x4806    LDR	R0, [PC, #24]
0x157A	0x6801    LDR	R1, [R0, #0]
0x157C	0xF06F50A0  MVN	R0, #335544320
0x1580	0x4001    ANDS	R1, R0
0x1582	0x4804    LDR	R0, [PC, #16]
0x1584	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x1586	0xF04F0100  MOV	R1, #0
0x158A	0x4806    LDR	R0, [PC, #24]
0x158C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x158E	0xB001    ADD	SP, SP, #4
0x1590	0x4770    BX	LR
0x1592	0xBF00    NOP
0x1594	0x10004002  	RCC_CR+0
0x1598	0x0000F0FF  	#-251723776
0x159C	0x10044002  	RCC_CFGR+0
0x15A0	0xFFFFFEF6  	#-17367041
0x15A4	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x1784	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x1786	0x4902    LDR	R1, [PC, #8]
0x1788	0x4802    LDR	R0, [PC, #8]
0x178A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x178C	0xB001    ADD	SP, SP, #4
0x178E	0x4770    BX	LR
0x1790	0x19400001  	#72000
0x1794	0x00BC2000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x1798	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x179A	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x179C	0xB001    ADD	SP, SP, #4
0x179E	0x4770    BX	LR
; end of ___GenExcept
0x1BEC	0xB500    PUSH	(R14)
0x1BEE	0xF8DFB024  LDR	R11, [PC, #36]
0x1BF2	0xF8DFA024  LDR	R10, [PC, #36]
0x1BF6	0xF8DFC024  LDR	R12, [PC, #36]
0x1BFA	0xF7FFFCD5  BL	5544
0x1BFE	0xF8DFB020  LDR	R11, [PC, #32]
0x1C02	0xF8DFA020  LDR	R10, [PC, #32]
0x1C06	0xF8DFC020  LDR	R12, [PC, #32]
0x1C0A	0xF7FFFCCD  BL	5544
0x1C0E	0xBD00    POP	(R15)
0x1C10	0x4770    BX	LR
0x1C12	0xBF00    NOP
0x1C14	0x00002000  	#536870912
0x1C18	0x00852000  	#536871045
0x1C1C	0x19040000  	#6404
0x1C20	0x00882000  	#536871048
0x1C24	0x00A72000  	#536871079
0x1C28	0x1B9C0000  	#7068
0x1C88	0xB500    PUSH	(R14)
0x1C8A	0xF8DFB010  LDR	R11, [PC, #16]
0x1C8E	0xF8DFA010  LDR	R10, [PC, #16]
0x1C92	0xF7FFFC35  BL	5376
0x1C96	0xBD00    POP	(R15)
0x1C98	0x4770    BX	LR
0x1C9A	0xBF00    NOP
0x1C9C	0x00002000  	#536870912
0x1CA0	0x00D82000  	#536871128
;__Lib_System_105_107.c,448 :: __Lib_System_105_107_ADCPrescTable [4]
0x15BC	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
;Click_ExcelonLP_STM.c,0 :: ?ICS?lstr1_Click_ExcelonLP_STM [20]
0x1904	0x202D2D2D ;?ICS?lstr1_Click_ExcelonLP_STM+0
0x1908	0x74737953 ;?ICS?lstr1_Click_ExcelonLP_STM+4
0x190C	0x69206D65 ;?ICS?lstr1_Click_ExcelonLP_STM+8
0x1910	0x2074696E ;?ICS?lstr1_Click_ExcelonLP_STM+12
0x1914	0x002D2D2D ;?ICS?lstr1_Click_ExcelonLP_STM+16
; end of ?ICS?lstr1_Click_ExcelonLP_STM
;Click_ExcelonLP_STM.c,0 :: ?ICS?lstr2_Click_ExcelonLP_STM [18]
0x1918	0x64616552 ;?ICS?lstr2_Click_ExcelonLP_STM+0
0x191C	0x76654420 ;?ICS?lstr2_Click_ExcelonLP_STM+4
0x1920	0x20656369 ;?ICS?lstr2_Click_ExcelonLP_STM+8
0x1924	0x3A204449 ;?ICS?lstr2_Click_ExcelonLP_STM+12
0x1928	0x0020 ;?ICS?lstr2_Click_ExcelonLP_STM+16
; end of ?ICS?lstr2_Click_ExcelonLP_STM
;Click_ExcelonLP_STM.c,0 :: ?ICS_OUTBuf [20]
0x192A	0x00000000 ;?ICS_OUTBuf+0
0x192E	0x00000000 ;?ICS_OUTBuf+4
0x1932	0x00000000 ;?ICS_OUTBuf+8
0x1936	0x00000000 ;?ICS_OUTBuf+12
0x193A	0x00000000 ;?ICS_OUTBuf+16
; end of ?ICS_OUTBuf
;Click_ExcelonLP_STM.c,0 :: ?ICS_demoText [50]
0x193E	0x00000000 ;?ICS_demoText+0
0x1942	0x00000000 ;?ICS_demoText+4
0x1946	0x00000000 ;?ICS_demoText+8
0x194A	0x00000000 ;?ICS_demoText+12
0x194E	0x00000000 ;?ICS_demoText+16
0x1952	0x00000000 ;?ICS_demoText+20
0x1956	0x00000000 ;?ICS_demoText+24
0x195A	0x00000000 ;?ICS_demoText+28
0x195E	0x00000000 ;?ICS_demoText+32
0x1962	0x00000000 ;?ICS_demoText+36
0x1966	0x00000000 ;?ICS_demoText+40
0x196A	0x00000000 ;?ICS_demoText+44
0x196E	0x0000 ;?ICS_demoText+48
; end of ?ICS_demoText
;Click_ExcelonLP_STM.c,0 :: ?ICS?lstr3_Click_ExcelonLP_STM [4]
0x1970	0x00783020 ;?ICS?lstr3_Click_ExcelonLP_STM+0
; end of ?ICS?lstr3_Click_ExcelonLP_STM
;Click_ExcelonLP_STM.c,0 :: ?ICS?lstr4_Click_ExcelonLP_STM [2]
0x1974	0x0020 ;?ICS?lstr4_Click_ExcelonLP_STM+0
; end of ?ICS?lstr4_Click_ExcelonLP_STM
;Click_ExcelonLP_STM.c,0 :: ?ICS?lstr5_Click_ExcelonLP_STM [19]
0x1976	0x74697257 ;?ICS?lstr5_Click_ExcelonLP_STM+0
0x197A	0x694D2065 ;?ICS?lstr5_Click_ExcelonLP_STM+4
0x197E	0x456F726B ;?ICS?lstr5_Click_ExcelonLP_STM+8
0x1982	0x74616420 ;?ICS?lstr5_Click_ExcelonLP_STM+12
0x1986	0x002E61 ;?ICS?lstr5_Click_ExcelonLP_STM+16
; end of ?ICS?lstr5_Click_ExcelonLP_STM
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x198C	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x1990	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x1994	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x1998	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x199C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x19A0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x19A4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x19A8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x19AC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x19B0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x19B4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x19B8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x19BC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x19C0	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x19C4	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x19C8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x19CC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x19D0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x19D4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x19D8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x19DC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x19E0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x19E4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x19E8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x19EC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x19F0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x19F4	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,675 :: __GPIO_MODULE_SPI3_PC10_11_12 [108]
0x19F8	0x0000002A ;__GPIO_MODULE_SPI3_PC10_11_12+0
0x19FC	0x0000002B ;__GPIO_MODULE_SPI3_PC10_11_12+4
0x1A00	0x0000002C ;__GPIO_MODULE_SPI3_PC10_11_12+8
0x1A04	0xFFFFFFFF ;__GPIO_MODULE_SPI3_PC10_11_12+12
0x1A08	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+16
0x1A0C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+20
0x1A10	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+24
0x1A14	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+28
0x1A18	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+32
0x1A1C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+36
0x1A20	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+40
0x1A24	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+44
0x1A28	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+48
0x1A2C	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+52
0x1A30	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+56
0x1A34	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+60
0x1A38	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+64
0x1A3C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+68
0x1A40	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+72
0x1A44	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+76
0x1A48	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+80
0x1A4C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+84
0x1A50	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+88
0x1A54	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+92
0x1A58	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+96
0x1A5C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+100
0x1A60	0x08201100 ;__GPIO_MODULE_SPI3_PC10_11_12+104
; end of __GPIO_MODULE_SPI3_PC10_11_12
;__Lib_GPIO_32F10x_Defs.c,726 :: __GPIO_MODULE_USART3_PD89 [108]
0x1A64	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x1A68	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x1A6C	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x1A70	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x1A74	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x1A78	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x1A7C	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x1A80	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x1A84	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x1A88	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x1A8C	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x1A90	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x1A94	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x1A98	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x1A9C	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x1AA0	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x1AA4	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x1AA8	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x1AAC	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x1AB0	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x1AB4	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x1AB8	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x1ABC	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x1AC0	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x1AC4	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x1AC8	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x1ACC	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART2_PD56 [108]
0x1AD0	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x1AD4	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x1AD8	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x1ADC	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x1AE0	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x1AE4	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x1AE8	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x1AEC	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x1AF0	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x1AF4	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x1AF8	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x1AFC	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x1B00	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x1B04	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x1B08	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x1B0C	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x1B10	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x1B14	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x1B18	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x1B1C	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x1B20	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x1B24	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x1B28	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x1B2C	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x1B30	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x1B34	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x1B38	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x1B3C	0x000011BD ;__MIKROBUS1_GPIO+0
0x1B40	0x00001111 ;__MIKROBUS1_GPIO+4
0x1B44	0x00001105 ;__MIKROBUS1_GPIO+8
0x1B48	0x00001129 ;__MIKROBUS1_GPIO+12
0x1B4C	0x0000111D ;__MIKROBUS1_GPIO+16
0x1B50	0x00000C79 ;__MIKROBUS1_GPIO+20
0x1B54	0x00000B75 ;__MIKROBUS1_GPIO+24
0x1B58	0x00000B69 ;__MIKROBUS1_GPIO+28
0x1B5C	0x00000B5D ;__MIKROBUS1_GPIO+32
0x1B60	0x00000B99 ;__MIKROBUS1_GPIO+36
0x1B64	0x00000B8D ;__MIKROBUS1_GPIO+40
0x1B68	0x00000B81 ;__MIKROBUS1_GPIO+44
0x1B6C	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x1B70	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x1B74	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x1B78	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x1B7C	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x1B80	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x1B84	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x1B88	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x1B8C	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x1B90	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x1B94	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x1B98	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;Click_ExcelonLP_STM.c,0 :: ?ICS_memoryAddress [4]
0x1B9C	0x00000055 ;?ICS_memoryAddress+0
; end of ?ICS_memoryAddress
;,0 :: _initBlock_14 [59]
; Containing: ?ICS_sendBuffer [7]
;             ?ICS?lstr6_Click_ExcelonLP_STM [20]
;             APBAHBPrescTable [16]
;             Digits [16]
0x1BA0	0x726B694D ;_initBlock_14+0 : ?ICS_sendBuffer at 0x1BA0
0x1BA4	0x5200456F ;_initBlock_14+4 : ?ICS?lstr6_Click_ExcelonLP_STM at 0x1BA7
0x1BA8	0x20646165 ;_initBlock_14+8
0x1BAC	0x6F6D656D ;_initBlock_14+12
0x1BB0	0x64207972 ;_initBlock_14+16
0x1BB4	0x20617461 ;_initBlock_14+20
0x1BB8	0x0000203A ;_initBlock_14+24 : APBAHBPrescTable at 0x1BBB
0x1BBC	0x01000000 ;_initBlock_14+28
0x1BC0	0x01040302 ;_initBlock_14+32
0x1BC4	0x06040302 ;_initBlock_14+36
0x1BC8	0x30090807 ;_initBlock_14+40 : Digits at 0x1BCB
0x1BCC	0x34333231 ;_initBlock_14+44
0x1BD0	0x38373635 ;_initBlock_14+48
0x1BD4	0x43424139 ;_initBlock_14+52
0x1BD8	0x464544 ;_initBlock_14+56
; end of _initBlock_14
;Click_ExcelonLP_STM.c,3 :: __EXCELONLP_SPI_CFG [8]
0x1BDC	0x00000001 ;__EXCELONLP_SPI_CFG+0
0x1BE0	0x00000304 ;__EXCELONLP_SPI_CFG+4
; end of __EXCELONLP_SPI_CFG
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_SPI [8]
0x1BE4	0x000009AD ;__MIKROBUS1_SPI+0
0x1BE8	0x00000A45 ;__MIKROBUS1_SPI+4
; end of __MIKROBUS1_SPI
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150      [12]    _Get_Fosc_kHz
0x015C     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x01F4     [140]    _GPIO_Clk_Enable
0x0280     [168]    _RCC_GetClocksFrequency
0x0328      [34]    __Lib_SPI_123_SPIx_Read
0x034C     [272]    _GPIO_Alternate_Function_Enable
0x045C     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x06A0      [66]    __Lib_SPI_123_SPIx_Init_Advanced
0x06E4      [30]    __Lib_UART_123_45_UARTx_Write
0x0704     [500]    _GPIO_Config
0x08F8      [40]    _UART2_Init_Advanced
0x0920      [28]    _UART2_Write
0x093C      [28]    _UART5_Write
0x0958      [28]    _UART4_Write
0x0974      [28]    _UART3_Write
0x0990      [28]    _SPI1_Write
0x09AC      [28]    _SPI3_Write
0x09C8      [28]    _SPI2_Write
0x09E4      [28]    _UART1_Write
0x0A00      [40]    _UART1_Init_Advanced
0x0A28      [28]    _SPI1_Read
0x0A44      [28]    _SPI3_Read
0x0A60      [84]    _SPI3_Init_Advanced
0x0AB4      [24]    _GPIO_Digital_Input
0x0ACC      [28]    _GPIO_Digital_Output
0x0AE8      [40]    _UART3_Init_Advanced
0x0B10      [28]    _SPI2_Read
0x0B2C      [12]    easymx_v7_STM32F107VC__setAN_2
0x0B38      [12]    easymx_v7_STM32F107VC__setSCK_2
0x0B44      [12]    easymx_v7_STM32F107VC__setCS_2
0x0B50      [12]    easymx_v7_STM32F107VC__setRST_2
0x0B5C      [12]    easymx_v7_STM32F107VC__setRX_1
0x0B68      [12]    easymx_v7_STM32F107VC__setINT_1
0x0B74      [12]    easymx_v7_STM32F107VC__setPWM_1
0x0B80      [12]    easymx_v7_STM32F107VC__setSDA_1
0x0B8C      [12]    easymx_v7_STM32F107VC__setSCL_1
0x0B98      [12]    easymx_v7_STM32F107VC__setTX_1
0x0BA4      [12]    easymx_v7_STM32F107VC__setMISO_2
0x0BB0      [12]    easymx_v7_STM32F107VC__setSCL_2
0x0BBC      [12]    easymx_v7_STM32F107VC__setTX_2
0x0BC8      [32]    __excelonlp_driver_hal_gpioMap
0x0BE8      [24]    __excelonlp_driver_hal_spiMap
0x0C00      [12]    easymx_v7_STM32F107VC__setSDA_2
0x0C0C      [12]    easymx_v7_STM32F107VC__setPWM_2
0x0C18      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x0C24      [60]    __excelonlp_driver_hal_spiWrite
0x0C60      [12]    easymx_v7_STM32F107VC__setRX_2
0x0C6C      [12]    easymx_v7_STM32F107VC__setINT_2
0x0C78      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x0C84      [56]    easymx_v7_STM32F107VC__log_initUartA
0x0CBC      [56]    easymx_v7_STM32F107VC__log_initUartB
0x0CF4      [56]    easymx_v7_STM32F107VC__log_init2
0x0D2C      [36]    easymx_v7_STM32F107VC__spiInit_2
0x0D50      [32]    easymx_v7_STM32F107VC__log_write
0x0D70      [36]    easymx_v7_STM32F107VC__spiInit_1
0x0D94     [440]    easymx_v7_STM32F107VC__gpioInit_1
0x0F4C     [440]    easymx_v7_STM32F107VC__gpioInit_2
0x1104      [12]    easymx_v7_STM32F107VC__setCS_1
0x1110      [12]    easymx_v7_STM32F107VC__setRST_1
0x111C      [12]    easymx_v7_STM32F107VC__setMISO_1
0x1128      [12]    easymx_v7_STM32F107VC__setSCK_1
0x1134      [60]    __excelonlp_driver_hal_spiRead
0x1170      [76]    __excelonlp_driver_hal_spiTransfer
0x11BC      [12]    easymx_v7_STM32F107VC__setAN_1
0x11C8      [56]    easymx_v7_STM32F107VC__log_init1
0x1200     [100]    _excelonlp_readMemoryData
0x1264      [64]    _excelonlp_readData
0x12A4      [88]    _excelonlp_writeMemoryData
0x12FC      [92]    _IntToHex
0x1358      [24]    _Delay_100ms
0x1370      [48]    _excelonlp_sendCommand
0x13A0      [70]    _mikrobus_logInit
0x13E8      [48]    _mikrobus_spiInit
0x1418      [66]    _mikrobus_gpioInit
0x145C     [112]    _mikrobus_logWrite
0x14CC      [52]    _excelonlp_spiDriverInit
0x1500      [58]    ___FillZeros
0x153C     [108]    __Lib_System_105_107_SystemClockSetDefault
0x15A8      [20]    ___CC2DW
0x15C0     [328]    _applicationTask
0x1708      [32]    _applicationInit
0x1728      [92]    _systemInit
0x1784      [20]    __Lib_System_105_107_InitialSetUpFosc
0x1798       [8]    ___GenExcept
0x17A0      [32]    _main
0x17C0     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [20]    ?lstr1_Click_ExcelonLP_STM
0x20000014      [18]    ?lstr2_Click_ExcelonLP_STM
0x20000026      [20]    _OUTBuf
0x2000003A      [50]    _demoText
0x2000006C       [4]    ?lstr3_Click_ExcelonLP_STM
0x20000070       [2]    ?lstr4_Click_ExcelonLP_STM
0x20000072      [19]    ?lstr5_Click_ExcelonLP_STM
0x20000085       [1]    _cnt
0x20000086       [1]    _MemoryData
0x20000088       [4]    _memoryAddress
0x2000008C       [7]    _sendBuffer
0x20000093      [20]    ?lstr6_Click_ExcelonLP_STM
0x200000A8       [4]    _logger
0x200000AC       [4]    __excelonlp_driver_hal_gpio_csSet
0x200000B0       [4]    __excelonlp_driver_fp_spiRead
0x200000B4       [4]    __excelonlp_driver_hal_gpio_pwmSet
0x200000B8       [4]    __excelonlp_driver_fp_spiWrite
0x200000BC       [4]    ___System_CLOCK_IN_KHZ
0x200000C0       [4]    _SPI_Rd_Ptr
0x200000C4       [4]    _SPI_Wr_Ptr
0x200000C8       [4]    _UART_Wr_Ptr
0x200000CC       [4]    _UART_Rd_Ptr
0x200000D0       [4]    _UART_Rdy_Ptr
0x200000D4       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x15BC       [4]    __Lib_System_105_107_ADCPrescTable
0x1904      [20]    ?ICS?lstr1_Click_ExcelonLP_STM
0x1918      [18]    ?ICS?lstr2_Click_ExcelonLP_STM
0x192A      [20]    ?ICS_OUTBuf
0x193E      [50]    ?ICS_demoText
0x1970       [4]    ?ICS?lstr3_Click_ExcelonLP_STM
0x1974       [2]    ?ICS?lstr4_Click_ExcelonLP_STM
0x1976      [19]    ?ICS?lstr5_Click_ExcelonLP_STM
0x198C     [108]    __GPIO_MODULE_USART1_PA9_10
0x19F8     [108]    __GPIO_MODULE_SPI3_PC10_11_12
0x1A64     [108]    __GPIO_MODULE_USART3_PD89
0x1AD0     [108]    __GPIO_MODULE_USART2_PD56
0x1B3C      [96]    __MIKROBUS1_GPIO
0x1B9C       [4]    ?ICS_memoryAddress
0x1BA0       [7]    ?ICS_sendBuffer
0x1BA7      [20]    ?ICS?lstr6_Click_ExcelonLP_STM
0x1BBB      [16]    __Lib_System_105_107_APBAHBPrescTable
0x1BCB      [16]    __Lib_Conversions_Digits
0x1BDC       [8]    __EXCELONLP_SPI_CFG
0x1BE4       [8]    __MIKROBUS1_SPI
